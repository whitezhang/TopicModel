
 archive-name: intel-unix-x-faq
 last-modified: 30 mar 1993
 
 note: this is a major re-organization (and replacement) of my
       "frequently asked questions about x386" faq list.
 
 this article includes answers to:
 
 i) what options do i have for x software on my intel-based unix system?
 	1. free options
 	2. commercial options
 ii) what is xfree86 and where do i get it?
 	3. what is xfree86?
 	4. what oss are supported?
 	5. what video hardware is supported?
 	6. what about accelerated boards?
 	7. why doesn't xfree86 support 16-color vga modes?
 	8. what other hardware or software requirements are there?
 	9. where can i get source for xfree86?
 	10. where can i get binaries for xfree86?
 iv) what general things should i know about running xfree86?
 	11. installation directories
 	12. configuration files
 	13. determining vga dot clocks and monitor modes
 	14. rebuilding/reconfiguring the server from the link kit
 v) what os-specific things should i know about running xfree86?
 	15. svr4
 	16. svr3
 	17. 386bsd
 	18. linux
 	19. mach
 vi) what things should i know for building xfree86 from source?
 vii) is there anything special about building clients with xfree86?
 	20. bsd compatibility library
 	21. ansiccoptions
 
 this article does not include answers to general x questions, since these
 are already covered by the x faq that is regularly posted by david b. lewis
 <faq%craft@uunet.uu.net>.
 
 if you have anything to add or change on the faq just let me know.
 (especially if you had a problem that someone else was able to help you with)
 send changes to steve@ecf.toronto.edu, please put 'faq' somewhere
 in the subject line so that my mail filter will put it in the correct
 mail folder.
 
 please do not ask me questions that are not answered in the faq.  i do not
 have time to respond to these individually.  instead, post your question
 to the net, and send me the question and answer together when you get it.
 
 frequently asked questions about x on intel-based unix (with answers)
 =====================================================================
 
 i) what options do i have for x software on my intel-based unix system?
 
 1. free options
 	the best option is xfree86, which is an enhanced version of x386 1.2.
 	any other version of x386 will have slower performance, and will
 	be more difficult to compile.  information on how to obtain xfree86
 	is listed below.
 
 	x386 is the port of the x11 server to system v/386 that was
 	done by thomas roell (roell@sgcs.com).
 	it supports a wide variety of svga boards.
 	there are 2 major free versions: x386 1.1 is based on x11r4,
 	x386 1.2 is included in mit's x11r5 distribution (ie. you
 	don't need to patch it into the mit source any more).
 	x386 1.3 is the current commercial offering from sgcs (see below).
 
 2. commercial options
 
      1) metro link
 	2213 w. mcnab road
 	pompano beach, fl  33069
 	(305) 970-7353
 	fax: (305) 970-7351
 	email: sales@metrolink.com
 
 	summary: os:    qnx, svr3, svr4.[012], sco, unixware, lynxos, 
 			desqview/x, venix, isc, solaris, pyramid, sunos
 		 hw:    ega, vga, svga, tiga, targa, 8514/a, mach, 
 			s3, wd, fujistu, matrox, microfield graphics, r33020
 		 other: motif, openlook/xview, xie imaging extension,
 			xv video extension, audio drivers, multi media
 
      2) sgcs (snitily graphics consulting services)
 	894 brookgrove lane
 	cupertino, ca  95014
 	(800) 645-5501, (408) 255-9665
 	fax: (408) 255-9740
 	email: info@sgcs.com  or ...!mips!zok!info
 
 	summary: os: svr3.2, svr4 
 		 hw: 8514/a (ati ultra), s3 (diamond stealth), svga
 		 other: motif, dual-headed server
 
      3) consensys corporation
 	1301 pat booker rd.
 	universal city, tx 78148
 	phone: 1-800-388-1896
 	fax:   1-416-940-2903
 	email: info@consensys.com
 
 	summary: os: consensys v4.2, consensys' version of
 		     unix system v release 4.2
 		 hw: x11r4 server support for vga, svga
 		 other: moolit, motif, x11r5 clients
 
      4) the santa cruz operation, inc.
 	p.o. box 1900
 	santa cruz, california 95061
 	(408) 425 7222, (800) sco unix,
 	fax: (408) 458 4227
 	email: info@sco.com
 
 	summary: os: odt 1.1, odt 2.0, sco unix 3.2v4
 		 hw: x11r4 server support for svga, 8514/a, s3, tms340x0,
 		     wd90c31, xga2, assorted local bus (see sco hardware
 		     compatabilty guide for actual card vendors).
 		 other: motif	
 
      5) answer software & consulting
 	p.o. box 14171
 	columbus, ohio 43214
 	614-263-xlab
 	email: sales@x4coher.com
 
 	summary: os: coherent 4.0.1r72 or greater
 		 hw: works with any vesa compliant video
 
   note: other commercial vendors (including os vendors describing
 	bundled software) are welcome to submit summary information
 	summary information such as the above.
 
 ii) what is xfree86 and where do i get it?
 
 3. what is xfree86?
 
    xfree86 is an enhanced version of x386 1.2, which was distributed with
    x11r5.  this release consists of many bug fixes, speed improvements, and
    other enhancements.  here are the highlights of the enhancements:
 
     1) the speedup package from glenn lai is an integral part of xfree86,
        selectable at run-time via the xconfig file.  some speedups require
        an et4000 based svga, and others require a virtual screen width of
        1024.  the speedups suitable to the configuration are selected by
        default.  with a high-quality et4000 board (vram), this can yield
        up to 40% improvement of the xstones benchmark over x386 1.2.
     2) the fx386 packages from jim tsillas are included as the default
        operating mode if speedup is not selected.  this mode is now
        equivalent in performance to x386 1.1b (x11r4), and approximately
        20% faster than x386 1.2.
     3) support for localconn, compile-time selectable for server, clients,
        or both.  this support is for both svr3.2 and svr4.  for svr4.0.4
        with the 'advanced compatibility package', local connections from
        sco xsight/odt clients are supported.
     4) drivers for ati and trident tvga8900c and tvga9000 svga chipsets.
        refer to the files readme.ati and readme.trident for details about
        the ati and trident drivers.
     5) support for compressed bitmap fonts has been added (thomas eberhardt's
        code from the contrib directory on export.lcs.mit.edu).
     6) type1 font code from mit contrib tape has been included, and is
        compile-time selectable.  there are contributed type1 fonts in the
        contrib directory on export.lcs.mit.edu.
     7) new configuration method which allows the server's drivers and font
        renderers to be reconfigured from both source and binary
        distributions.
     8) integrated support for 386bsd, mach, and linux.
     9) a monochrome version of the server which will run on generic vga
        cards is now included.
 
    the following key features were added with the release of xfree86 1.2
    (they were not in xfree86 1.1):
 
     1) the monochrome server has been enhanced to do bank-switching of
        available svga memory to allow virtual screens up to 1600x1200 
        (see the x386(1) manual page for more information).
     2) support for the hercules mono card has been added to the
        monochrome server, and with it the ability to support a "two
        headed" server - one vga, and one hercules.  so far this has only
        been tested on svr4 (it is also reported to work under linux).
     3) svr3 shared libraries, tested under isc svr3 2.2 and 3.0.1.
     4) support for svr4.2 (there are some special considerations to
        consider, due to new usl bugs; see the readme.svr4 file for
        more information.)
     5) support for ps/2 mice, and logitech mouseman/trackman (some 
        versions of these devices were not previously compatible).
     6) a new tutorial on how to develop correct video card and monitor
        timing data, written by eric raymond (derived from previous
        documentation and a lot of experimentation).
     7) greatly improved support for international keyboards, including
        implementation of the compose key functionality found on many 
        vendor servers (see the x386keybd(1) manual page for more 
        information).
     8) the accuracy with which the server detects svga pixel clocks has
        been improved, and the timings are now stored at accuracies of
        0.1 mhz.  users may want to consider removing an existing clocks
        line from their xconfig file and re-probing using the new server.
     9) many enhancements in error handling and parsing of the xconfig
        configuration file.  error messages are much more informative
        and intuitive, and more validation is done.  there are many new
        options that can be enabled in the xconfig file (see the x386(1) 
        manual page for more information on the format of this file).
 
        plus a number of other small things.  refer to the changelog file
        in the source distribution for full details.
 
    also included are a tutorial on monitor timing by eric raymond, and the
    current x386 mode database and a sample xdm configuration by david wexelblat.
 
 4. what oss are supported?
 
     xfree86 supports:
 	svr4.2: consensys v4.2
 	svr4.0: microport, dell, esix, isc, at&t, mst, consensys, uhc
 	svr3: isc 2.2 & 3.0, at&t 2.2
 	linux, mach 386, 386bsd 0.1
 
 	bsd/386 is not supported, but it should work. the most active
 	bsd/386 person is greg lehey <grog@lemis.de>.
 
 	note that esix 3.2d and sco are not supported yet,
 	but anyone should feel free to submit patches.
 	if you are interested in tackling this, send mail to
 	xfree86@physics.su.oz.au
 
 5. what video hardware is supported?
 
    at this time, xfree86 1.2 supports the following svga chipsets:
 
 	tseng et4000
 	tseng et3000
 	paradise pvga1
 	western digital wd90c00, wd90c10, wd90c11 (these are supersets of
 		the pvga1, and use its driver)
 	genoa gvga
 	trident tvga8900c, tvga9000
 	ati 18800, 28800
 
 	all of the above are supported in both 256 color and monochrome modes,
 	with the exception of the ati chipsets, which are only supported in
 	256 color mode.
 
 	the monochrome server also supports generic vga cards, using 64k of
 	video memory in a single bank, and the hercules card.  on the
 	et3000, only 64k of video memory is supported for the monochrome
 	server, and the gvga has not been tested with more than 64k.
 
 	it appears that some of the svga card manufacturers are going to
 	non-traditional mechanisms for selecting pixel-clock frequencies.  to
 	avoid having to modify the server to accommodate these schemes xfree86
 	1.2 adds support for using an external program to select the pixel
 	clock.  this allows programs to be written as new mechanisms are
 	discovered.  refer to the readme.clkprog file for information on how
 	these programs work, if you need to write one.  if you do develop such
 	a program, the xfree86 team would be interested in including it with
 	future xfree86 releases.
 
 	if you are purchasing new hardware for the purpose of using xfree86,
 	it is suggested that you purchase an et4000-based board such as the
 	orchid prodesigner iis.  avoid recent diamond boards; xfree86 will not
 	work with them, because diamond won't provide programming details.
 	in fact, the xfree86 project is actively not supporting new diamond
 	products, as long as such policies remain in effect.  contributions
 	of code will not be accepted (because of the potential liabilities).
 	if you would like to see this change, tell diamond about it.
 
 	some people have asked if xfree86 would work with local bus or eisa
 	video cards. theoretically, the means of communication between the
 	cpu and the video card is irrelevant to xfree86 compatibility. it
 	could be isa, eisa, or local bus.  what should matter is the chipset
 	on the video card.  unfortunately, the developers don't have a lot
 	of access to eisa or vlb machines, so this is largely an untested
 	theory.  however, we have yet to see any reports of things not
 	working on one of these buses and we have several reports of xfree86
 	working fine on them.
 
 6. what about accelerated boards?
 
 	at this time, there is no support in xfree86 for accelerated boards
 	like the s3, ati ultra (8514/a), tiga, etc.  this support is available
 	in commercial products from sgcs and metrolink (for svr3 and svr4).
 
 	an s3 server is available for 386bsd and linux.  contact
 	<hasty@netcom.com> for 386bsd or <jon@robots.ox.ac.uk> for linux.
 
 	a beta 8514/a server is available for linux. contact <martin@cs.unc.edu>
 	or <jon@robots.ox.ac.uk>. note: these servers are not part of xfree86.
 
 7. why doesn't xfree86 support 16-color vga modes?
 
 	the reason that this is not supported is the way vga implements the
 	16-color modes.  in 256-color modes, each byte of frame buffer memory
 	contains 1 pixel.  but the 16-color modes are implemented as bit-
 	planes.  each byte of frame- buffer memory contains 1 bit from each
 	of each of 8 pixels, and there are four such planes.  the mit frame-
 	buffer code is not designed to deal with this.  if vga handled
 	16-color modes by packing 2 4-bit pixels into each byte, the mit code
 	could be modified to support this (or it already may; i'm not sure).
 	but for the vga way of doing things, a complete new frame-buffer
 	implementation is required.  some beta testers are looking into this,
 	but nothing is yet available from the project.
 
 8. what other hardware or software requirements are there?
 
 	obviously, a supported svga board and os are required.  to run
 	x efficiently, 12-16mb of memory should be considered a minimum.
 	the various binary releases take 10-40mb of disk space, depending
 	on the os (e.g. whether or not it supports shared libraries).
 	to build from sources, at least 80mb of free disk space will
 	be required, although 120mb should be considered a comfortable 
 	lower bound.
 
 9. where can i get source for xfree86?
 
 	source patches for the current version (1.2, based on x11r5 pl22
 	from mit), are available via anonymous ftp from:
 		export.lcs.mit.edu (under /contrib/xfree86)
 		ftp.physics.su.oz.au (under /xfree86)
 		ftp.win.tue.nl (under /pub/xfree86)
 	(for the rest of this faq, these 3 location will be called $ftp)
 
 	refer to the readme file under the specified directory for information
 	on which files you need to get to build your distribution.
 
 10. where can i get binaries for xfree86?
 
 	binaries are available via anonymous ftp from:
 		ftp.physics.su.oz.au		- svr4 binaries
 			under /xfree86/svr4
 		ftp.win.tue.nl			- svr4 binaries
 			under /pub/xfree86/svr4
 		ferkel.ucsb.edu			- svr4 binaries
 			under /pub/svr4/xfree86
 		stasi.bradley.edu		- svr4 binaries
 			under /pub/xfree86/svr4
 		blancmange.ma.utexas.edu	- svr3 (isc) binaries
 			under /pub/isc
 		ftp.prz.tu-berlin.de            - svr3 (isc) binaries
 			under /pub/pc/isc/xfree86
 		tsx-11.mit.edu			- linux binaries
 			under /pub/linux/packages/x11
 		agate.berkeley.edu		- 386bsd binaries
 			under /pub/386bsd/0.1-ports/xfree86
 		ftp.cs.uwm.edu			- mach binaries
 			under /i386
 
 	ensure that you are getting xfree86 1.2 - some of these sites may
 	archive older releases as well.  each binary distribution will
 	contain a readme file that describes what files you need to take
 	from the archive, and which compile-time option selections were
 	made when building the distribution.
 
 iv) what general things should i know about running xfree86?
 
 11. installation directories
 
 	the top-level installation directory is specified by the projectroot
 	(/usr/x386, by default) variable in config/site.def. binaries, include
 	files, and libraries are installed in $projectroot/{bin,include,lib}.
 
 	this can be changed when rebuilding from sources, and can be modified
 	via symbolic links for those oss that support them. this directory is
 	nonstandard, and was chosen this way to allow xfree86 to be installed
 	alongside a commercial/vendor-supplied x implementation.
 
 12. configuration files
 
 	the xfree86 server reads a configuration file ("xconfig") on startup.
 	the search path, contents and syntax for this file are documented in
 	the server manpage, which should be consulted before asking questions.
 
 13. determining vga dot clocks and monitor modes
 
 	david e wexelblat (dwex@mtgzfs3.att.com) maintains a database of known
 	clock settings for vga cards and monitor settings.
 	the database is installed in /usr/x386/lib/x11/etc/modedb.txt, and
 	is in the source tree under mit/server/ddx/x386/etc. this database is
 	also available from him (for the latest copy), and is kept on
 	export.lcs.mit.edu in ~/contrib/x386.modedb.z, which is updated
 	occasionally.  obtain a copy of this database.  it just might have the
 	settings you need.  if you create new settings, please send them to
 	david for inclusion in the database.
 
 	if this doesn't help you, the videomodes.doc (by eric raymond) file 
 	with xfree86 contains tutorials on how to come up with these timings.
 	it may be helpful to start with settings that almost work, and use
 	this description to get them right.  when you do, send the information
 	to david wexelblat for inclusion in the database.
 
 	note: the old 'clock.exe' program is not supported any more, and
 	      is completely unnecessary.  if you need to determine dot
 	      clock values for a new board, remove the 'clocks' line from
 	      your xconfig file (if present), and start the server.  the
 	      server will probe for clocks itself and print them out.
 	      you can use these values to put a 'clocks' line into your
 	      xconfig file, which is not necessary, but will speed up
 	      starting the server in the future.
 
 14. rebuilding/reconfiguring the server from the link kit
 
 	if you have installed the server binary link kit, it is possible to
 	reconfigure the drivers and font renderers in the server.  this is
 	fully explained in the readme file that is available with the link kit.
 
 v) what os-specific things should i know about running xfree86?
 
 	first of all, the server must be installed suid-root (mode 4755).
 
 15. svr4
 	why won't my xterm run properly?
 
 	if your kernel is not built with the consem module, you should define
 	consem=no in you environment. otherwise xterm won't run.
 	csh users should use 'setenv consem no'
 
 	the esix console driver patch 403019 is known to cause keymapping
 	problems with xfree86.  it recommended that this patch not be
 	installed.  alternatively they keymap can be fixed with xmodmap.
 
 16. svr3
 
 	make sure you look at $ftp/readme.isc, if that's what you are running.
 
 17. 386bsd
 
 	make sure you look at $ftp/readme.386bsd.
 
 	also, a separate 386bsd faq is maintained by richard murphey
 	<rich@rice.edu>.  the latest version should be available in the
 	file xfree86-1.2-386bsd-faq at the following ftp sites:
 
 	    agate.berkeley.edu:/pub/386bsd/0.1-ports/xfree86-1.2
 	    wuarchive.wustl.edu:/mirrors4/386bsd/0.1-ports/xfree86-1.2
 	    grasp1.univ-lyon1.fr:pub/386bsd/0.1-ports/xfree86-1.2
 
 18. linux
 
 	you must be running linux 0.97pl4 or greater, and have the 4.1 gcc
 	jump libraries installed.
 
 	make sure the binaries x386, x386mono, xload and xterm are setuid root.
 
 	if your kernel doesn't have tcp support compiled in, you'll have to
 	run the server as "x -pn". the default startup configuration assumes
 	that tcp is not available. if it is, change the two files
 	/usr/x386/bin/startx and /usr/x386/lib/x11/xdm/xservers, removing the
 	-pn argument to x386.
 
 	make sure /dev/console is either a link to /dev/tty0 or has the major
 	number 4, minor number 0. also note that if /dev/console is not
 	owned by the user running x, then xconsole and xterm will not permit
 	console output redirection. xdm will properly change the owner, but
 	startx won't.
 
 	when running xdm from rc.local, you will need to provide it with
 	a tty, for example "xdm < /dev/console &".
 
 	for more detailed information, please read the file readme present
 	with the distribution on tsx-11.mit.edu.
 
 19. mach
 
 	make sure you look at $ftp/readme.mach.
 
 vi) what things should i know for building xfree86 from source?
 
 	this section has been removed from the faq, since it is
 	fully explained in $ftp/readme and the os-specific readmes.
 	please look at those files for information on building xfree86.
 
 vii) is there anything special about building clients with xfree86?
 
 20. bsd compatibility library
 
 	a lot of clients make use of bsd functions like bcopy(), etc.
 	the default configuration files are set up to link with libxbsd.a
 	which contains emulation for bcopy(), bzero(), bcmp(), ffs(), random(),
 	seed(). a better way of providing the 'b' functions is to include
 	<x11/xfuncs.h> in source files that call them.  xfuncs.h provides macro
 	definitions for these in terms of the sysv 'mem' functions.  if you are
 	linking with a vendor supplied library which calls some of these
 	functions, then you should link with libxbsd.a
 
 21. ansiccoptions
 
 	this is something that was added to allow a developer to get rid of the
 	ansi-ness defined in the default ccoptions without having to rewrite
 	the entire ccoptions line.  for example, with stock mit, you'd see
 	something like
 		ccoptions="-ansi -o2 -fwritable-strings"
 	and to get rid of the ansi-ness, the developer would have to put
 		ccoptions="-o2 -fwritable-strings"
 	in his imakefile.  with this change, you would see a default of
 		ansiccoptions="-ansi"
 		ccoptions="-o2 -fwritable-strings"
 	and all the developer would have to put in the imakefile is:
 		ansiccoptions=
 	to get rid of the ansi-ness (many x clients will die a horrible death
 	with -ansi).  the effect is even more dramatic in practice, because
 	ccoptions is actually quite complex.  the other issue is that one must
 	add 'ansiccoptions=$(ansiccoptions)' to a passcdebugflags definition.
 
 xfree86 contact information
 
     ongoing development planning and support is coordinated by the xfree86
     core team.  at this time the core team consists of:
 
 	the original "gang of four":
 		david dawes <dawes@physics.su.oz.au>
 		glenn lai <glenn@cs.utexas.edu>
 		jim tsillas <jtsilla@damon.ccs.northeastern.edu>
 		david wexelblat <dwex@mtgzfs3.att.com>
 
 	those supporting non-sysv operating systems:
 		robert baron <robert.baron@ernst.mach.cs.cmu.edu> [mach]
 		rich murphey <rich@rice.edu> [386bsd]
 		orest zborowski <obz@kodak.com> [linux]
 
     e-mail sent to <xfree86@physics.su.oz.au> will reach all of the core team.
 
 	--------------------------------------------------
 
 thanks to all the people who already sent me corrections or additions,
 especially david wexelblat (one of the major contributors of updates).
 -- 
 steve kotsopoulos  p.eng.           mail:   steve@ecf.toronto.edu
 systems analyst                     bitnet: steve@ecf.utoronto.bitnet
 engineering computing facility      uucp:   uunet!utai!ecf!steve
 university of toronto               phone:  (416) 978-5898
 