
 in article <1993apr22.162016.5923@telesoft.com>, trevor@telesoft.com (trevor bourget @ignite) writes:
 |> in <sdennis.735423404@aa.cad.slb.com> sdennis@osf.org writes:
 |> 
 |> >i posted this a while ago and didn't receive one reply, and now we
 |> >have another bug report on the same subject. can anybody help me out?
 |> 
 |> the problem is that motif uses xgrabkey to implement menu accelerators,
 |> and these grabs are specific about which modifiers apply.  unfortunately,
 |> the specification for xgrabkey doesn't allow anymodifier to be combined
 |> with other modifiers, which is exactly what would be desired in this case:
 |> "ctrl any<key>q".
 |> 
 |> >in ora vol. 6, in the section on accelerators it says "for information
 |> >on how to specify translation tables see vol. 4...", this is so you
 |> >know what to put for the xmnaccelerator resource.  if you go to
 |> >vol. 4 it says, "likewise, if a modifier is specified, there is
 |> >nothing to prohibit other modifiers from being present as well. for
 |> >example, the translation:
 |> >	shift<key>q:	quit()
 |> >will take effect even if the ctrl key is held down at the same time as
 |> >the shift key (and the q key).
 |> 
 |> this is true for accelerators and mnemonics, which are implemented using
 |> event handlers instead of grabs; it's not true for menu accelerators.  if
 |> you're a motif implementor, i'd suggest lobbying to get the xlib semantics
 |> changed to support the feature i described above.  otherwise, change the
 |> documentation for menu accelerators to properly set the user's
 |> expectations, because menu accelerators are not the same thing as
 |> translations.
 |> 
 |> >is it possible to supply > 1 accelerator for a menu entry?
 |> 
 |> if you mean "menu accelerator", no it's not possible.  that's according to
 |> the definition of the xmnaccelerator resource in the xmlabel manual page.
 |> 
 |> >keep in mind when answering this question that when using motif you
 |> >can't use xtinstallaccelerators().
 |> 
 |> i can't think of a reason why not.
 |> 
 |> >how can you ensure that accelerators work the same independent of
 |> >case?  what i want is ctrl+o and ctrl+o to both be accelerators on one
 |> >menu entry.
 
 i find this thread on motif accelerators absoultly amazing.  if i were
 writing an interface to keyboard accelerators, i would have one
 resource called "accelerators" that took a translation table, period.
 i would also implement it so that programmer never has to do any work
 to get the accelerators installed.  as soon as the end-user specified
 one, it would be active and automatically installed.
 
 to get multiple accelerators on a single menu item i'd do something like:
 
 	*menuitem.accelerators: #override \n\
 		ctrl<key>m:	fire() \n\
 		shift<key>l:	fire() \n
 
 the accelerators would work exactly like translations and you would
 automatically see a "ctrl m" show up in your menuitem object.
 
 why in the world is the motif stuff so complicated with so many different
 special cases depending on what type of widget you're dealing with?  there
 has to be some reason.
 
 sorry for the political tone of this message...
 
 --
 tom lastrange        toml@boulder.parcplace.com
 