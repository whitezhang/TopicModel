
 i am having a problem with the high order bit of a character being 
 clipped when entered in an xterm window under motif. i have reprogrammed
 the f1 key to transmit a <ff> <be> character sequence by using the
 following line in .xdefaults:
 
 ~ctrl ~shift ~alt <key> f1 : string(0xff) string(0xbe) \n\
 
 i merge in this line with xrdb -merge and then create the new xterm
 which has the remapped f1 key. the problem that arises is that the 
 application which is recieving input at the time only sees a <7f> <3e>
 sequence, which is <ff> <be> with the high order bit of each
 character being filtered or ignored.
 
 when i run xev and press the f1 key, i get the correct value showing 
 up in the following two key events:
 
   keypress event, serial 14, synthetic no, window 0x2800001,
   root 0x28, subw 0x0, time 2067815294, (67,80), root:(74,104),
   state 0x0, keycode 16 (keysym 0xffbe, f1), same_screen yes,
   xlookupstring gives 0 characters:  ""
 
   keyrelease event, serial 16, synthetic no, window 0x2800001,
   root 0x28, subw 0x0, time 2067815406, (67,80), root:(74,104),
   state 0x0, keycode 16 (keysym 0xffbe, f1), same_screen yes,
   xlookupstring gives 0 characters:  ""
 
 notice that the keysym being transmitted is correct; 0xffbe.
 but when i use the f1 key while in vi or in a program i wrote to 
 spit back the hex values of keyboard input, i only get <7f> <3e>.
 
 does anyone know why the high order bit is being filtered and what
 i can do to make sure that the entire 8bits make it through to
 the final application? any help is greatly appreciated.
 
 please *email* any responses.
 
 jim kavitsky
 kavitsky@hsi.com
 