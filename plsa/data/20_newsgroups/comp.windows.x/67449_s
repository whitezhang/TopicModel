
 in article <1993apr20.114824.9110@alex.com>, bryan@alex.com (bryan boreham) writes:
 |> 
 |> the shell is waiting for the window-manager to respond to its
 |> positioning request.  the window-manager is not responding because
 |> it thinks the window is already in the right place.
 |> 
 |> exactly *why* the two components get into this sulk is unclear to
 |> me; all information greatly received.
 
 this problem is caused by a bad interaction between the way olwm reparents
 windows, a misfeature of the x protocol, and a bug in the xt intrinsics.  
 
 the intrinsics bug is that it ignores the (x,y) position given in
 reparentnotify events.  olwm is structured in such a way that, when a window
 is popped down, the last event the client receives is a reparentnotify event. 
 at this point, the intrinsics' notion of the shell's location is out of date.
 
 if a setvalues is done using the same (x,y) position, the intrinsics thinks it
 needs to move the shell, so it issues a configurewindow request to move it
 there.  however, a (mis)feature of the x protocol is that a configurewindow
 request that has no effect will generate no configurenotify event.  the
 intrinsics thus waits for an event that will never arrive, and times out after
 wmtimeout has expired.  (actually, things are somewhat more complex because
 the request is redirected to the window manager, but the net result is the
 same.)
 
 the solution is for the intrinsics to note the (x,y) positioning information
 in reparentnotify events.  this has been implemented and is available in x11r5
 public fix 20.  this is xbug 5513 for those of you who are interested in
 gorier details.
 
 s'marks
 
 -- 
 stuart w. marks				stuart.marks@eng.sun.com
 window systems technology		2550 garcia ave. m/s 21-228
 sunsoft, inc.				mountain view, ca 94043
 