
 i'm working on an x11r5 application and have concerns regarding 
 standard colormaps.
 
 the x11r5 documentation says: "usually, a window manager creates 
 these colormaps."  i wonder what window manager the writer had 
 in mind.  neither twm or mwm seem to create standard colormaps.
 
 of course, one can use xstdcmap to create standard colormaps.  
 however, xstdcmap doesn't seem to try very hard to avoid 
 conflicts with the default colormap.  when i use standard 
 colormaps created by xstdcmap, the rest of my display goes black.  
 so it seems as if use of standard colormaps causes the very 
 problem standard colormaps are intended to avoid.  perhaps 
 if every application used standard colormaps, things would 
 be wonderful.  but not many applications seem to use 
 standard colormaps.
 
 finally, the operation of the functions xmugetcolormapallocation, 
 xmustandardcolormap, and xmucreatecolormap seem inconsistent 
 with the section 14.3 of the x11r5 xlib documentation.
 
     according to the section 14.3 of the x11r5 xlib documentation (p. 436):
 
     for grayscale colormaps, only the colormap, red_max, red_mult, and 
     base_pixel members are defined.  the other members are ignored.  
     to compute a grayscale pixel value, use the following expression:
 
             (gray * red_mult + base_pixel) &0xffffffff
 
     xmugetcolormapallocation, defined in mit/lib/xmu/cmapalloc.c, is 
     used by xmulookupstandardcolormap, defined in mit/lib/xmu/lookupcmap.c
     to select red_max, green_max, and blue_max values for the 
     call to xmustandardcolormap.  when the rgb_gray_map property is 
     specified, xmugetcolormapallocation sets red_max to 30% of the 
     total number of cells in the gray scale, sets green_max to 59% 
     of the total number, and sets blue_max ot 11% of the total number.
     referring to section 14.3, one would expect xmugetcolormapallocation 
     to set red_max to the total number of cells in the gray scale.
 
     when the rgb_gray_map property is specified, xmustandardcolormap, 
     defined in mit/lib/xmu/stdcmap.c, sets red_mult, green_mult, 
     and blue_mult all equal to 1.  referring to section 14.3, 
     one would expect green_mult and blue_mult to be ignored.
 
     when red_mult, green_mult, and blue_mult all equal 1, 
     xmucreatecolormap, defined in mit/lib/xmu/crcmap.c, constructs 
     a gray map. the sum of red_max, green_max, and blue_max gives 
     the maximum gray value.  referring to section 14.3, on would 
     expect red_max to give the maximum gray value.
 