
 archive-name: x-faq/part2
 last-modified: 1993/04/04
 
 ----------------------------------------------------------------------
 subject:  24)! how do i make a screendump or print my application?
 
 	the xwd client in the x11 distributions can be used to select a window 
 or the background. it produces an xwd-format file of the image of that window. 
 the file can be post-processed into something useful or printed with the xpr 
 client and your local printing mechanism. you can use this command:
 		csh% sleep 10; xwd -root > output.xwd &
 and then spend 10 seconds or so setting up your screen; the entire current
 display will be saved into the file output.xwd. note that xwd also has an
 undocumented (before r5) -id flag for specifying the window id on the 
 command-line. [there are also unofficial patches on export to xwd for 
 specifying the delay and the portion of the screen to capture.]
 
 	two publicly-available programs which allow interactive definition of 
 arbitrary portions of the display and built-in delays are asnap and xgrabsc.
 there are several versions of xgrabsc; version 2.2, available on export [8/92]
 is the most recent.
 	xsnap includes some asnap features and supersedes it; it also renders 
 xpm output [version unknown]. it is available on export or avahi.inria.fr;
 see xsnap-pl2.tar.z.
 	a screen-dump and merge/edit program combining features of xwd and xpr
 is available from vernam.cs.uwm.edu as xdump1.0.tar.z. information: 
 soft-eng@cs.uwm.edu.
 	xprint, by alberto accomazzi (alberto@cfa.harvard.edu) is available
 from cfa0 (128.103.40.1) in xprint.export-2.1.tar.z.
 
 	to post-process the xwd output of some of these tools, you can use xpr,
 which is part of the x11 distribution. also on several archives are xwd2ps
 and xtops, which produce encapsulated postscript with trimmings suitable for 
 use in presentations (see export.lcs.mit.edu:contrib/xwd2ps.tar.z and
 contrib/imagemagick.tar.z). also useful is the pbmplus package on many archive
 servers; and the xim package contains level 2 color postscript output.
 
 	the xv program can grab a portion of the x display, manipulate it, and
 save it in one of the available formats. imagemagick has similar capabilities.
 
 	also: 
 
 	bristol technology (info@bristol.com, 203-438-6969) offers xprinter 
 2.0, an xlib api for postscript and pcl printers; a demo is on ftp.uu.net
 in vendor/bristol/xprinter.
 
 	colorsoft 9619-459-8500) offers openprint package includes a screen-
 capture facility, image-processing, and support for postscript and 
 non-postscript printers.
 
 	some vendors' implementations of x (e.g. decwindows and openwindows) 
 include session managers or other desktop programs which include "print portion
 of screen" or "take a snapshot" options. some platforms also have tools which 
 can be used to grab the frame-buffer directly; the sun systems, for example, 
 have a 'screendump' program which produces a sun raster file. some x terminals 
 have local screen-dump utilities to write postscript to a local serial printer.
 
 	some vendors' implementations of lpr (e.g. sony) include direct 
 support for printing xwd files, but you'll typically need some other package 
 to massage the output into a useful format which you can get to the printer.
 
 ----------------------------------------------------------------------
 subject:  25)  how do i make a color postscript screendump of the x display?
 
 	if you need color postscript in particular, you can 
 	- grab the screen-image using a program which can produce color 
 postscript, such as xgrabsc and xv 
 	- grab the screen-image using xwd and post-process xwd into color ps.
 you can do this using xwd2ps or the xtops program from the imagemagick 
 distribution. the pbmplus package is also good for this, as is the xim package.
 
 ----------------------------------------------------------------------
 subject:  26)  how do i make a screendump including the x cursor?
 
 	this can't be done unless the x server has been extended. consider 
 instead a system-dependent mechanism for, e.g.,  capturing the frame-buffer.
 
 ----------------------------------------------------------------------
 subject:  27)  how do i convert/view mac/tiff/gif/sun/pict/img/fax images in x?
 
 	the likeliest program is an incarnation of jef poskanzer's useful++ 
 portable bitmap toolkit, which includes a number of programs for converting 
 among various image formats. it includes support for many types of bitmaps, 
 gray-scale images, and full-color images. pbmplus has been updated recently;
 the most recent version [12/91] is on export in contrib/pbmplus10dec91.tar.z.
 	another tool is san diego supercomputing center's imtools ('imconv' in 
 particular), which packages the functionality of pbm into a single binary.
 it's available anonymous ftp from sdsc.edu (132.249.20.22).
 
 	useful for viewing some image-formats is jim frost's xloadimage, a
 version of which is in the r4 directory contrib/clients/xloadimage; there are 
 later versions available, including contrib/xloadimage.3.03.tar.z on export.  
 graeme gill's updates to an earlier version of xloadimage are also on export; 
 see xli.readme and xli.tar.z.uu; version 1.14 was released 2/93.
 
 	xv (x image viewer), written by bradley@cis.upenn.edu (john bradley), 
 can read and display pictures in sun raster, pgm, pbm, ppm, x11 bitmap, tiff, 
 gif and jpeg. it can manipulate on the images: adjust, color, intensity, 
 contrast, aspect ratio, crop). it can save images in all of the aforementioned 
 formats plus postscript. it can grab a portion of the x display, manipulate on 
 it, and save it in one of the available formats. the program was updated 5/92; 
 see the file contrib/xv-2.21.tar.z on export.lcs.mit.edu.
 
 	the fuzzy pixmap manipulation, by michael mauldin <mlm@nl.cs.cmu.edu>.
 conversion and manipulation package, similar to pbmplus.  version 1.0 available
 via ftp as nl.cs.cmu.edu:/usr/mlm/ftp/fbm.tar.z, uunet.uu.net:pub/fbm.tar.z, 
 and ucsd.edu:graphics/fbm.tar.z.
 
 	the img software set, by paul raveling <raveling@venera.isi.edu>, reads
 and writes its own image format, displays on an x11 screen, and does some image
 manipulations.  version 1.3 is available via ftp on expo.lcs.mit.edu as
 contrib/img_1.3.tar.z, along with large collection of color images.
 
 	the utah rle toolkit is a conversion and manipulation package similar 
 to pbmplus.  available via ftp as cs.utah.edu:pub/urt-*, 
 weedeater.math.yale.edu:pub/urt-*, and freebie.engin.umich.edu:pub/urt-*.
 
 	xim, the x image manipulator, by philip thompson, does essential 
 interactive displaying, editing, filtering, and converting of images. there is 
 a version in the x11r4 contrib area; but a more recent version (using r4 and 
 motif 1.1) is available from gis.mit.edu (18.80.1.118). xim reads/writes gif, 
 xwd, xbm, tiff, rle, xim, (writes level 2 eps) and other formats and also has a
 library and command-line utilities for building your own applications.
 
 	imagemagick [2.3; 2/93] by cristy@dupont.com can be retrieved from 
 export's contrib area. it is a collection of utilities to transform and display
 images on any x server. the tool uses the miff format; filters to and from miff
 from other popular formats (ppm, tiff, gif, sun raster, etc) are included.
 
 	xtiff is a tool for viewing a tiff file in an x window.  it was written
 to handle as many different kinds of tiff files as possible while remaining
 simple, portable and efficient.  xtiff illustrates some common problems
 with building pixmaps and using different visual classes.  it is distributed
 as part of sam leffler's libtiff package and it is also available on
 export.lcs.mit.edu, uunet.uu.net and comp.sources.x. [dbs@decwrl.dec.com,10/90]
 xtiff 2.0 was announced in 4/91; it includes xlib and xt versions.
 
 	a version of lee iverson's (leei@mcrcim.mcgill.edu) image-viewing tool
 is available as contrib/vimage-0.9.3.tar.z on export.lcs.mit.edu.  the package 
 also includes an imageviewport widget and a filedialog widget. [12/91;5/92] 
 
 [some material from larry carroll (larryc@poe.jpl.nasa.gov), 5/91]
 
 ----------------------------------------------------------------------
 subject:  28)  how can i change the titlebar of my xterm window?
 
 	the solution involves sending an escape sequence to xterm which will
 cause it to update the property which the window manager relies upon for the
 string which appears in the window titlebar.
 	a solution is as easy as typing this in an xterm running a shell:
 		echo "esc]2;text^g"
 where esc is the escape key, text is the string you wish to have displayed,
 and ^g is a control-g (the bel character).
 
 	here is a more complicated csh alias which changes the titlebar to
 the current working directory when you change directories:
 		alias newcd 'cd \!*; echo -n esc]2\;$cwd^g'
 
 	the digit '2' in these strings indicates to xterm that it should 
 change only the title of the window; to change both the title and the name 
 used in the icon, use the digit '0' instead, and use '1' to change only the 
 icon name.
 
 	note: another way to do this, which prevents an incorrect display of
 the local directory if a modified `cd` is used in a subshell, is to wrap the
 escape sequences into the ps1 prompt itself.
 
 	note: on an ibm rs/6000 is may be necessary to begin the sequence with
 a ^v.
 
 ----------------------------------------------------------------------
 subject:  29)  where can i find the xterm control sequences?
 
 the best source of such information is in your r5 sources in the file 
 ctlseqs.ms; a postscript version is in mit/hardcopy/clients/ctlseqs.ps.z.
 
 o'reilly's volume 3, the x user's guide, includes an r5 version of the control 
 sequences; the standard volume will be available 3/93, and a motif version of 
 the book is available now. the current (r4) guide includes an outdated version
 of the control sequences. [1/93]
 
 other good sources of information include the r4 version of that document
 and also the file in the r4 sources called mit/clients/xterm/ctlseq2.txt, a 
 compilation put together by skip montanaro (ge cr&d) listing the vt100 
 sequences. it dates from r3 but is fairly accurate.  a hardcopy version was 
 published in the december 1989 xnextevent (the xug newsletter).
 
 in a pinch, a vt100 manual will do.
 
 [last updated 10/91]
 
 ----------------------------------------------------------------------
 subject:  30)- why does the r3 xterm, et al, fail against the r4 server?
 ----------------------------------------------------------------------
 subject:  31)  how can i use characters above ascii 127 in xterm ?
 
 	in order to use special characters such as the o-umlaut, you need to 
 "stty pass8" but also to use a charcell iso8859 font, such as 
 	xterm*font: 	-*-*-medium-r-normal-*-*-130-*-*-c-*-iso8859-1
 	xterm*boldfont:	-*-*-bold-r-normal-*-*-130-*-*-c-*-iso8859-1
 [the family is intentionally unspecified in this example.]
 
 in addition, you may want to set this in your shell:
 	setenv lc_ctype iso_8859_1
 
         for a given character above 127, you can determine the key to use with 
 the alt modifier by finding the equivalent character below 127 (try using
 `man ascii`). for example, o-umlaut (v) is alt-v and the section character (') 
 is alt-'. 
 
 [thanks to greg holmberg (greg%thirdi@uunet.uu.net) and stephen gildea 
 (gildea@expo.lcs.mit.edu); 6/92]
 
 ----------------------------------------------------------------------
 subject:  32)  why are my xterm menus so small?
 
 	you are probably setting the geometry small accidentally. if you give 
 a resource specification like this:
 		xterm*geometry: 80x24
 then you are asking for all widgets under xterm to have their geometry set to
 80x24. for the main window, this is ok, as it uses characters for its size. 
 but its popup menus don't; they are in pixels and show up small. to set only
 the terminal widget to have the specified geometry, name it explicitly:
 		xterm*vt100.geometry: 80x24
 
 ----------------------------------------------------------------------
 subject:  33)  how can i print the current selection?
 
 	you could paste it into an xterm after executing the lpr command. 
 however, a program by richard hesketh (rlh2@ukc.ac.uk) specifically for 
 manipulating the selection will help; e.g. 
 	% xselection primary | lpr
 finds the primary selection and prints it. this command can be placed in a 
 window-manager menu or in shell-scripts. xselection also permits the setting of
 the selection and other properties. a version is on export.
 	also available is ria.ccs.uwo.ca:pub/xget_selection.tar.z, which can be
 adapted to do this.
 
 ----------------------------------------------------------------------
 subject:  34)  how does xt use environment variables in loading resources?
 
 	you can use several environment variables to control how resources are 
 loaded for your xt-based programs -- xfilesearchpath, xuserfilesearchpath, and 
 xapplresdir.  these environment variables control where xt looks for 
 application-defaults files as an application is initializing.  xt loads at most
 one app-defaults file from the path defined in xfilesearchpath and another from
 the path defined in xuserfilesearchpath.
 
 	set xfilesearchpath if software is installed on your system in such a 
 way that app-defaults files appear in several different directory hierarchies.
 suppose, for example, that you are running sun's open windows, and you also 
 have some r4 x applications installed in /usr/lib/x11/app-defaults. you could 
 set a value like this for xfilesearchpath, and it would cause xt to look up 
 app-defaults files in both /usr/lib/x11 and /usr/openwin/lib (or wherever your
 openwinhome is located):
 	setenv xfilesearchpath /usr/lib/x11/%t/%n:$openwinhome/lib/%t/%n
 
 the value of this environment variable is a colon-separated list of pathnames.  the pathnames contain replacement characters as follows (see 
 xtresolvepathname()):
 
         %n      the value of the filename parameter, or the
                 application's class name.
         %t      the value of the file "type".  in this case, the
                 literal string "app-defaults"
         %c      customization resource (r5 only)
         %s      suffix.  none for app-defaults.
         %l      language, locale, and codeset (e.g. "ja_jp.euc")
         %l      language part of %l  (e.g. "ja")
         %t      the territory part of the display's language string
         %c      the codeset part of the display's language string
 
 	let's take apart the example.  suppose the application's class name is 
 "myterm". also, suppose open windows is installed in /usr/openwin. (notice the 
 example omits locale-specific lookup.)
 	/usr/lib/x11/%t/%n        means /usr/lib/x11/app-defaults/myterm
 	$openwinhome/lib/%t/%n    means /usr/openwin/lib/app-defaults/myterm
 
 	as the application initializes, xt tries to open both of the above 
 app-defaults files, in the order shown.  as soon as it finds one, it reads it 
 and uses it, and stops looking for others.  the effect of this path is to 
 search first in /usr/lib/x11, then in /usr/openwin.
 
 	let's consider another example. this time, let's set 
 xuserfilesearchpath so it looks for the file myterm.ad in the current working 
 directory, then for myterm in the directory ~/app-defaults.
 	setenv xuserfilesearchpath ./%n.ad:$home/app-defaults/%n
 
 	the first path in the list expands to ./myterm.ad.  the second expands 
 to $home/app-defaults/myterm.  this is a convenient setting for debugging 
 because it follows the imake convention of naming the app-defaults file 
 myterm.ad in the application's source directory, so you can run the application
 from the directory in which you are working and still have the resources loaded
 properly.  note: when looking for app-default files with xuserfilesearchpath,
 for some  bizarre reason, neither the type nor file suffix is defined so %t and
 %s are useless.
 
 	with r5, there's another twist.  you may specify a customization 
 resource value.  for example, you might run the "myterm" application like this:
 	myterm -xrm "*customization: -color"
 
 	if one of your pathname specifications had the value
 "/usr/lib/x11/%t/%n%c" then the expanded pathname would be
 "/usr/lib/x11/app-defaults/myterm-color" because the %c substitution character 
 takes on the value of the customization resource.
 
 	the default xfilesearchpath, compiled into xt, is:
 		/usr/lib/x11/%l/%t/%n%c:\  (r5)
 		/usr/lib/x11/%l/%t/%n%c:\  (r5)
 		/usr/lib/x11/%t/%n%c:\     (r5)
 		/usr/lib/x11/%l/%t/%n:\
 		/usr/lib/x11/%l/%t/%n:\
 		/usr/lib/x11/%t/%n
 
 	(note: some sites replace /usr/lib/x11 with a projectroot in
 this batch of default settings.)
 
 	the default xuserfilesearchpath, also compiled into xt, is 
 		<root>/%l/%n%c:\  (r5)
 		<root>/%l/%n%c:\  (r5)
 		<root>/%n%c:\     (r5)
 		<root>/%l/%n:\
 		<root>/%l/%n:\
 		<root>/%n:
 
 	<root> is either the value of xapplresdir or the user's home directory 
 if xapplresdir is not set.  if you set xuserfilesearchpath to some value other 
 than the default, xt ignores xapplresdir altogether.
 
 	notice that the quick and dirty way of making your application find 
 your app-defaults file in your current working directory is to set xapplresdir 
 to ".", a single dot.  in r3, all this machinery worked differently; for r3 
 compatibilty, many people set their xapplresdir value to "./", a dot followed 
 by a slash.
 
 [thanks to oliver jones (oj@world.std.com); 2/93.]
 
 ----------------------------------------------------------------------
 subject:  35)  how to i have the r4 xdm put a picture behind the log-in window?
 
 the answer lies in changing xdm's xrdb resource in the xdm-config file to run a
 program to change the background before loading the resources; for example, 
 your /usr/lib/x11/xdm/xdm-config file may add the line 
 	displaymanager.0.authorize: false 
 to permit unrestricted access to the display before log-in (beware!) and also 
 	displaymanager*xrdb:	/usr/lib/x11/xdm/new.xrdb
 where that file does something (for all connections) along the lines of:
 	#!/bin/sh
 	#comes in with arguments: -display :0 -load /usr/lib/x11/xdm/xresources
 	/usr/bin/x11/xsetroot -display $2 -bitmap /usr/lib/x11/xdm/new.bitmap
 	/usr/bin/x11/xrdb $*
 substitute xloadimage or xv for xsetroot, to taste.  note that this is a 
 general hack that can be used to invoke a console window or any other client.
 
 [thanks to jay bourland (jayb@cauchy.stanford.edu), 9/91]
 
 ----------------------------------------------------------------------
 subject:  36)  why isn't my path set when xdm runs my .xsession file?
 
 	when xdm runs your .xsession it doesn't source your .cshrc or .login
 files. you can set the path explicitly as you normally could for any sh script;
 or you can place all environment-setting statements in a separate file and
 source it from both the .xsession file and your shell configuration file; or,
 if you set your path in your .cshrc file, the normal place, you can make your 
 .xsession have path set simply by making it a csh script, i.e. by starting
 your .xsession file off with "#!/bin/csh". 
 	if this doesn't work, also try starting off with:
 		#!/bin/sh
 		# reset path:
 		path=`csh -c 'echo $path'` ; export path
 
 ----------------------------------------------------------------------
 subject:  37)  how do i keep my $display when i rlogin to another machine?
 
 	there are several ways to avoid having to do a "setenv display ..."
 whenever you log in to another networked unix machine running x.
 	one solution is to use the clients/xrsh on the r5 contrib tape.  it 
 includes xrsh, a script to start an x application on remote machine, and
 xrlogin, a script to start a local xterm running rlogin to a remote machine.
 a more recent version is on export in xrsh-5.4.shar.
 	one solution is to use the xrlogin program from der mouse
 (mouse@larry.mcrcim.mcgill.edu). you can ftp caveat-emptor versions from
 132.206.1.1, in x/xrlogin.c and x/xrlogind.c. the program packages up $term and
 $display into a single string, which is stuffed into $term.  rlogin then 
 propagates $term normally; your .cshrc on the remote machine should contain
 		eval `xrlogind`
 where xrlogind is a program that checks $term and if it is of the special 
 format it recognizes, unpacks it and spits out setenv and unsetenv commands to 
 recreate the environment variables. [11/90]
 
 	in addition, if all you need to do is start a remote x process on 
 another host, and you find
 		rsh <host> -n /usr/bin/x11/xterm -display $display 
 too simple (display must have your real hostname), then this version of xrsh 
 can be used to start up remote x processes. the equivalent usage would be 
 		xrsh <host> xterm
 
   #! /bin/sh
   # start an x11 process on another host
   # date: 8 dec 88 06:29:34 gmt
   # from: chris torek <chris@mimsy.umd.edu>
   # rsh $host -n "setenv display $display; exec $@ </dev/null >&/dev/null"
   #
   # an improved version:
   # rxcmd (suggested by john robinson, jr@bbn.com)
   #       (generalized for sh,ksh by keith boyer, keith@cis.ohio-state.edu)
   #
   # but they put the rcmd in ()'s which left zombies again.  this
   # script combines the best of both.
   
   case $# in
   [01])  echo "usage: $0 host x-cmd [args...]";;
   *)
   	case $shell in
   	*csh*)  host="$1"; shift
   		xhost "$host" > /dev/null
   		rsh "$host" -n \
   			"setenv term xterm; setenv display `hostname`:0; \
   			exec $* </dev/null >& /dev/null" &
   		;;
   	*sh)
   		host="$1"; shift
   		xhost "$host" > /dev/null
   		rsh "$host" -n \
   			"term=xterm export term; \
   			display=`hostname`:0 export display; \
   			ld_library_path=/usr/x11/lib export ld_library_path; \
   			path=\$path:/usr/x11/bin:/usr/bin/x11:/usr/local/bin; \
 			export path; \
   			exec $* < /dev/null > /dev/null 2>&1" &
   		;;
   	esac
   	;;
   esac
 
 ----------------------------------------------------------------------
 subject:  38)  how can i design my own font?
 
 	one way is to use the "bitmap" client or some other bitmap-editor (e.g.
 sun's icon-editor tool, post-processed with pbmplus) to design the individual 
 characters and then to do some large amount of post-processing to concatenate 
 them into the bdf format. see ollie jones's article in the november 91 x 
 journal for more information.
 	the r3 contrib/ area (in fonts/utils/ and in clients/xtroff) contained 
 a number of useful utilities, including some to convert between bdf font format
 and a simple character format which can be edited with any text editor.
 	an easier way is to use the "xfed" client to modify an existing font; a
 version is on the r4 or r5 x11r5 contrib tape in contrib/clients/xfed. xfed is 
 available for anonymous ftp on ftp.informatik.uni-dortmund.de [129.217.64.63], 
 possibly as file /pub/windows/x/diverse-x11-sourcen/xfed.tar.z. it can produce
 bdf-format fonts which can be compiled for a variety of x servers.
 	the xfedor client from group bull permits creation of bitmaps, cursors,
 xpm1 pixmaps, and fonts. binaries for common machines are on avahi.inria.fr in
 /pub; in addition, the sources (an old xlib implementation) have been placed 
 [5/91] in export:/contrib. 
 	if you are a metafont user you can use "mftobdf" from the seetex
 distribution to convert pk, gf, and pxl fonts to bdf format; the distribution
 is on ftp.cs.colorado.edu and on export.lcs.mit.edu.
 	the gnu package fontutils-0.4.tar.z on prep.ai.mit.edu includes xbfe,
 a font editor, and a number of utilities for massaging font formats.
 	the o'reilly x resource issue #2 contains an article on using these
 tools to modify a font.
 	fonts can be resized with hiroto kagotani's bdfresize; a new version is
 in ftp.cs.titech.ac.jp:/x11/contrib.
 
 ----------------------------------------------------------------------
 subject:  39)  why does adding a font to the server not work (sic)?
 
 	after you have built the font using your system's font-compiler, 
 installed it in some directory, and run `mkfontdir` or your system's equivalent
 (e.g. bldfamily for openwindows) in that directory, be sure to use `xset +fp 
 $dir` to add that full path-name to the server's font-path, *or* if the 
 directory is already in the path, use `xset fp rehash` so that the new fonts in
 that directory are actually found; it is this last step that you're probably 
 leaving out. (you can also use `xset q` to make sure that that directory is in 
 the path.)
 	sometimes your "xset +fp $dir" command fails with a badvalue error:
 		x error of failed request:badvalue
 			(integer parameter out of range for operation)
 		major opcode of failed request:  51 (x_setfontpath)
 
 	this means the x server cannot find or read your font directory, or
 that your directory does not look like a font directory to the server.  (the
 mention of an "integer parameter" in the message is spurious.)
 
 -- is the font directory you're specifying readable from the server's file
    system?  remember, it's the server, not the client, which interprets your
    font directory.  trouble in this area is especially likely when you issue an
    xset command with shell metacharacters in it (e.g. "xset +fp ~/myfonts") and
    the server is an x terminal or managed by xdm.
 
 -- is the directory really a font directory?  if you're running an mit server
    (or most varieties of vendor servers) look in the directory for the file
    "fonts.dir".  if you can't find that file, run mkfontdir(1).  (if you're
    running openwindows, look for the file "families.list".  if you can't find
    it, run bldfamily(1).)
 
 -- if you're in a site where some people run x11rn servers and others run a
    proprietary server with nonstandard font formats (openwindows, for
    example), make sure the font directory is right for the server you're using.
    hint: if the directory contains .pcf and/or .snf files, it won't work for
    open windows.  if the directory contains .ff and/or .fb files, it won't work
    for x11rn.
 
 [thanks to der mouse (mouse@larry.mcrcim.mcgill.edu) and to oliver jones 
 (oj@pictel.com); 7/92 ]
 
 ----------------------------------------------------------------------
 subject:  40)  how do i convert a ".snf" font back to ".bdf" font?
 
 	a tool called "snftobdf 1.4" is part of the bdftools package, which is 
 available from export.lcs.mit.edu:contrib/bdftools.tar.z and from 
 crl.nmsu.edu:pub/misc/bdftools.tar.z.  [2/91]
 
 ----------------------------------------------------------------------
 subject:  41)  what is a general method of getting a font in usable format?
 
 	der mouse's getbdf is one solution; it connects to a server and 
 produces a .bdf file for any font the server is willing to let it.  it can be 
 used as an anything-to-bdf converter, but requires access to a server that can 
 understand the font file, thus is both more and less powerful than other tools 
 such as snftobdf. getbdf is on 132.206.1.1 in x/getbdf.c or available via mail 
 from mouse@larry.mcrcim.mcgill.edu. [5/91]
 	in addition, the r5 program "fstobdf" can produce bdf for any font that
 the r5 server has access to.
 
 ----------------------------------------------------------------------
 subject:  42)  how do i use decwindows fonts on my non-decwindows server?
 
 	the decwindows fonts typically don't exist on a non-dec installation,
 but rewrite rules can be used to alias fonts used by decwindows applications to
 standard mit fonts of similar characteristics and size. pick up the file 
 contrib/decwindows_on_x11r4_font.aliases from export.lcs.mit.edu; this file is 
 for a standard mit r4 server.  it can also serve as a starting point for 
 creating a similar aliases file for the open windows server or other servers 
 which do not use the mit font scheme.
 
 ----------------------------------------------------------------------
 subject:  43)  how do i add ".bdf" fonts to my decwindows server?
 
 	the format of fonts preferred by dec's x server is the ".pcf" format.
 you can produce this compiled format from the .bdf format by using dec's dxfc
 font-compiler. note that the dec servers can also use raw .bdf fonts, with a
 performance hit.
 
 ----------------------------------------------------------------------
 subject:  44)! how can i set backgroundpixmap in a defaults file? (what is xpm?)
 i want to be able to do something like this:
 	xclock*backgroundpixmap:      /usr/include/x11/bitmaps/rootweave
 
 	you can't do this. the backgroundpixmap resource is a pixmap of the 
 same depth as the screen, not a bitmap (which is a pixmap of depth 1). because 
 of this, writing a generic string to pixmap converter is impossible, since 
 there is no accepted convention for a file format for pixmaps. therefore, 
 neither the x toolkit or the athena widget set define a string to pixmap 
 converter, because there is no converter you cannot specify this value as a 
 resource.  the athena widget set does define a string to bitmap converter for 
 use in many of its widgets, however.
 [courtesy chris d. peterson (now kit@ics.com), 4/90]
 
 however:
 	a specific converter which encapsulates much of the functionality of 
 the xloadimage package by jim frost was posted 12/90 by sebastian wangnick 
 (basti@unido.informatik.uni-dortmund.de); it permits loading of a number of 
 image formats as a pixmap.
 
 	the leading general-purpose format for pixmaps is the xpm format used 
 by groupe bull in several of its programs, including the gwm window manager, by
 at&t in its olpixmap editor, and by ics in its interface builder. xpm 
 distribution, available on export as contrib/xpm.tar.z, includes read/write 
 routines which can easily be adapted to converters by new widgets which want to
 allow specification of pixmap resources in the above manner.  see information
 on the xpm-talk mailing list above. xpm 3.0f was announced in 3/93 and is
 available from export.lcs.mit.edu and avahi.inria.fr; an older version is on 
 the r5 contrib tape. [a set of xpm icons collected by anthony thyssen 
 (anthony@kurango.cit.gu.edu.au) is on export in contrib/aicons.]
 
 ----------------------------------------------------------------------
 subject:  45)  why can't i override translations? only the first item works.
 
 	you probably have an extra space after the specification of the first 
 item, like this:
 	basic*text.translations:  #override \
 	ctrl<key>a:    beginning-of-line() \n\ 	
 	ctrl<key>e:    end-of-line()
 					      ^ extra space
 the newline after that space is ending the translation definition.
 [thanks to timothy j. horton, 5/91]
 
 ----------------------------------------------------------------------
 subject:  46)  how can i have xclock or oclock show different timezones?
 
 	one solution is xchron, in volume 6 of comp.sources.x, which can show
 the time for timezones other than the local one. 
 	alternatively, you can probably set the timezone in the shell from
 which you invoke the xclock or oclock, or use a script similar to this:
 	#!/bin/sh
 	tz=pst8pdt xclock -name "san_luis_obispo_ca" 2> /dev/null &
 	tz=est5edt xclock -name "king_of_prussia_pa" 2> /dev/null &
 
 ----------------------------------------------------------------------
 subject:  47)  i have xmh, but it doesn't work. where can i get mh?
 
 	the xmh mail-reader requires the rand mh mail/message handling system,
 which is not part of the unix software distribution for many machines. a list 
 of various ftp, uucp, e-mail and us-mail sites for both xmh and mh is given in 
 the monthly mh faq; one source is ics.uci.edu in the file pub/mh/mh-6.7.tar.z.
 if you do not receive the comp.mail.mh newsgroup or the mh-users mailing list, 
 you can request a copy of the faq, which also includes a section on xmh, 
 by sending mail to mail-server@pit-manager.mit.edu containing the request
 "send usenet/news.answers/mh-faq".
 
 ----------------------------------------------------------------------
 subject:  48)  why am i suddenly unable to connect to my sun x server?
 after a seemingly random amount of time after the x server has been started, no
 other clients are able to connect to it.
 
 	the default cron cleanup jobs supplied by sun (for 4.0.3, at least)
 delete "old" (unreferenced) files from /tmp -- including /tmp/.x11-unix, which 
 contains the socket descriptor used by x. the solution is to add "! -type s" to
 the find exclusion in the cron job.
 [10/90]
 
 ----------------------------------------------------------------------
 subject:  49)  why don't the r5 pex demos work on my mono screen?
 
 the r5 sample server implementation works only on color screens, sorry.
 
 ----------------------------------------------------------------------
 subject:  50)! how do i get my sun type-[45] keyboard fully supported by xsun?
  
 many users wants the num lock key to light the num lock led and have the 
 appropriate effect on the numeric keypad. the xsun server as distributed by mit
 doesn't do this but there are two different patches available.
  
 the first patch is written by jonathan lemon and fixes the num lock related 
 problems. it is available from export.lcs.mit.edu in the file
 contrib/xsun-r5.numlock_patch.z .
  
 the second is written by martin forssen and fixes the num lock and compose keys
 and adds support for the different national keyboard layouts for type-4 and 
 type-5 keyboards. this patch is available from export.lcs.mit.edu in
 contrib/sunkbd1216-0314.tar.z or via email from maf@dtek.chalmers.se.
  
 [thanks to martin forssen (maf@dtek.chalmers.se or maf@math.chalmers.se), 8/92]
 
 a set of patches by william bailey (dbgwab@arco.com) was posted to newsgroups
 11/92 to provide support for the type-5 keyboard.
 
 ----------------------------------------------------------------------
 subject:  51)  how do i report bugs in x?
 
 	generally, report bugs you find to the organization that supplied you
 with the x window system. if you received the r5 source distribution directly 
 from mit, please read the file mit/bug-report for instructions. [look in
 mit/doc/bugs/bug-report in r4.]
 
 [thanks to stephen gildea <gildea@expo.lcs.mit.edu>, 5/91; 12/91]
 
 ----------------------------------------------------------------------
 subject:  52)  why do i get "warning: widget class version mismatch"?
 
 	this error, which typically goes on to say, "widget 11004 vs. 
 intrinsics 11003" indicates that the header files you included when building 
 your program didn't match the header files that the xt library you're linking 
 against was built with; check your -i include path and -l link-path to be sure.
 	however, the problem also occurs when linking against a version of the 
 x11r4 xt library before patch 10; the version number was wrong. some sun ow
 systems, in particular, were shipped with the flawed version of the library, 
 and applications which link against the library typically give the warnings you
 have seen.
 
 ----------------------------------------------------------------------
 subject:  53)  where can i find a dictionary server for xwebster?
 
 	webster's still owns the copyright to the on-line copies of webster's
 dictionary which are found at various (university) sites. after it became aware
 that these sites were then acting as servers for other sites running xwebster 
 and gnuemacs-webster, it asked that server sites close off external access.
 	[the next machine apparently is also licensed to have the dictionary. a
 webster daemon for next machines is available from iuvax.cs.indiana.edu 
 (129.79.254.192) in "pub/webster/next-2.0".]
 	unless you want to get a legal on-line copy yourself or can find a site
 which can grant you access, you are probably out of luck. 
 
 	however, if you are a legitimate site, you'll want to pick up the
 latest xwebster, as-is on export:contrib/xwebster.tar.z [10/91]; the file 
 xwebster.readme includes discussions of the availability, illegality, and 
 non-availability of dictionary servers. 
 	
 [courtesy steve@umiacs.umd.edu (steve miller) and mayer@hplabs.hp.com (niels 
 mayer) 11/90]
 
 ----------------------------------------------------------------------
 subject:  54)  topic: obtaining x and related software and hardware
 ----------------------------------------------------------------------
 subject:  55)  is x public-domain software?
 
 	no. the x software is copyrighted by various institutions and is not 
 "public domain", which has a specific legal meaning. however, the x 
 distribution is available for free and can be redistributed without fee.
 	contributed software, though, may be placed in the public domain by
 individual authors.
 
 ----------------------------------------------------------------------
 subject:  56)  how compatible are x11r3, r4, and r5? what changes are there?
 
 the release notes for each mit release of x11 specify the changes from the 
 previous release.  the x consortium tries very hard to maintain compatibility 
 across releases.  in the few places where incompatible changes were necessary, 
 details are given in the release notes.  each x11 distribution site on the 
 network also offers the release notes that go with the release they offer; the 
 file typically can be found at the top of the distribution tree.
 
 [stephen gildea, 1/92]
 
 the comp.windows.x.intrinsics faq-xt lists xt differences among these versions.
 
 ----------------------------------------------------------------------
 subject:  57)! where can i get x11r5 (source and/or binaries)?
 
 information about mit's distribution of the sources on 6250bpi and qic-24 tape 
 and its distribution of hardcopy of the documents is available from 
 software center, technology licensing office, massachusetts institute of 
 technology, 28 carleton street, room e32-300, cambridge ma 02142-1324,
 phone: 617-258-8330.
 
 you will need about 100mb of disk space to hold all of core and 140mb to hold
 the contrib software donated by individuals and companies. 
 
 please use a site that is close to you in the network.
 
 note that the release notes are generally available separately in the same
 directory; the notes list changes from previous versions of x and offer a
 guide to the distribution.
 
 			  north america anonymous ftp:
 
 california	gatekeeper.dec.com		pub/x11/r5
 		16.1.0.2
 california	soda.berkeley.edu		pub/x11r5
 		128.32.131.179
 indiana		mordred.cs.purdue.edu		pub/x11/r5
 		128.10.2.2
 maryland	ftp.brl.mil			pub/x11r5
 		128.63.16.158
 		(good for milnet sites)
 massachusetts	crl.dec.com			pub/x11/r5
 		192.58.206.2
 massachusetts	export.lcs.mit.edu		pub/r5
 		18.24.0.12
 		(crl.dec.com is better)
 michigan	merit.edu			pub/x11r5
 		35.1.1.42
 missouri	wuarchive.wustl.edu		packages/x11r5
 		128.252.135.4
 montana		ftp.cs.montana.edu		pub/x.v11r5
 		192.31.215.202
 new mexico	pprg.eece.unm.edu		pub/dist/x11r5
 		129.24.24.10
 new york	azure.acsu.buffalo.edu		pub/x11r5
 		128.205.7.6
 north carolina	cs.duke.edu			dist/sources/x11r5
 		128.109.140.1
 ohio		ftp.cis.ohio-state.edu		pub/x.v11r5
 		128.146.8.52
 ontario		ftp.cs.utoronto.ca		pub/x11r5
 		128.100.1.105
 washington dc	x11r5-a.uu.net			x/r5
 		192.48.96.12
 washington dc	x11r5-b.uu.net			x/r5
 		137.39.1.12
 
 		   europe/middle east/australia anonymous ftp:
 
 australia	munnari.oz.au			x.v11/r5
 		128.250.1.21
 denmark		freja.diku.dk			pub/x11r5
 		129.142.96.1
 united kingdom	src.doc.ic.ac.uk		graphics/x.v11r5
 		146.169.3.7
 		hpb.mcc.ac.uk			pub/x11r5
 		130.88.200.7
 finland		nic.funet.fi			pub/x11/r5
 		128.214.6.100
 france		nuri.inria.fr			x/x11r5
 		128.93.1.26
 germany		ftp.germany.eu.net		pub/x11/x11r5
 		192.76.144.129
 israel		cs.huji.ac.il			pub/x11r5
 		132.65.6.5
 italy		ghost.sm.dsi.unimi.it		pub/x11r5
 		149.132.2.1
 netherlands	archive.eu.net			windows/x/r5
 		192.16.202.1
 norway		ugle.unit.no			pub/x11r5
 		129.241.1.97
 norway		nac.no				pub/x11r5
 		129.240.2.40
 switzerland	nic.switch.ch			software/x11r5
 		130.59.1.40
 
 			 japan anonymous ftp:
 
 kanagawa	sh.wide.ad.jp			x11r5
 		133.4.11.11
 kwansai		ftp.ics.osaka-u.ac.jp		x11r5
 		133.1.12.30
 kyushu		wnoc-fuk.wide.ad.jp		x11r5
 		133.4.14.3
 tisn		utsun.s.u-tokyo.ac.jp		x11r5
 		133.11.11.11
 tokyo		kerr.iwanami.co.jp		x11r5
 		133.235.128.1
 tokyo		scslwide.sony.co.jp		pub/x11r5
 		133.138.199.1
 
 				uucp:
 
 uunet		for uunet customers		~/x/r5
 decwrl		existing neighbors only		~/pub/x11/r5
 osu-cis						~/x.v11r5
 		(not online until ~ 9 sept)
 utai		existing neighbors only		~/ftp/pub/x11r5
 hp4nl		netherlands only		~uucp/pub/windows/x/r5
 		
 
 
 				 nfs:
 missouri	wuarchive.wustl.edu		/archive/packages/x11r5
 		128.252.135.4			mount point: /archive
 							
 				 afs:
 pennsylvania	/afs/grand.central.org/pub/x11r5
 
 		     niftp (hhcp, cpf, fcp, ...):
 united kingdom	uk.ac.ic.doc.src		<x.v11r5>
 		00000510200001
 		user "guest"
 
 			      anon ftam:
 united kingdom	000005102000 (janet)		x.v11r5
 		146.169.3.7 (internet)
 		204334504108 (ixi)
 
 			       acsnet:
 australia	munnari.oz (fetchfile)		x.v11/r5
 		please fetch only one file
 		at a time, after checking
 		that a copy is not available
 		at a closer site.
 
 [9/2/91; updated for contrib 10/91]
 
 anyone in europe can get a copy of the mit x.v11r5 distribution, including
 the core and contributed software and all official patches, free of charge.
 the only requirement is to agree to return the tapes, or equivalent new tapes.
 only qic and tk format cartridges can be provided.  contact: jamie watson,
 adasoft ag, nesslerenweg 104, 3084 wabern, switzerland.
 tel: +41 31 961.35.70 or +41 62 61.41.21; fax: +41 62 61.41.30; jw@adasoft.ch.
 
 uk sites can obtain x11 through the ukuug software distribution service, from 
 the department of computing, imperial college, london, in several tape formats.
 you may also obtain the source via janet (and therefore pss) using niftp (host:
 uk.ac.ic.doc.src name: guest password: your_email_address).  queries should be 
 directed to lee mcloughlin, 071-589-5111#5037, or to info-server@doc.ic.ac.uk 
 or ukuug-soft@uk.ac.ic.doc (send a subject line of "wanted". also offered are 
 copies of comp.sources.x, the export.lcs.mit.edu contrib and doc areas and most
 other announced freely distributable packages. 
 
 x11r5 and x11r4 source along with x11r5 contrib code, prebuilt x binaries for
 major platforms, and source code examples from o'reilly's books is available on
 an iso-9660-format cd-rom from o'reilly & associates. [as of 3/92].
 
 x11r5 source is available on iso-9660-format cd-rom for members of the japan
 unix society from hiroaki obata, obata@jrd.dec.com.
 
 x11r5 source along with gnu source, the comp.sources.x archives, and sparc
 binaries is available on an iso-9660-format cd-rom from pdq software,
 510-947-5996 (or robert a. bruce, rab@sprite.berkeley.edu).
 
 x11r5 source is available from automata design associates, +1 215-646-4894.
 
 various users' groups (e.g. sug) offer x sources cheaply, typically on cd-rom.
 
 source for the andrew user interface system 5.1 and binaries for common systems
 are available on cd-rom. information: info-andrew-requests@andrew.cmu.edu,
 412-268-6710, fax 412-621-8081.
 
 binaries for x11r5, with shared libx11 and libxmu, for a/ux 2.0.1 are now 
 available from wuarchive.wustl.edu:/archive/systems/aux/x11r5.  patches for 
 x11r5 compiled with gcc (but not shared libraries) are also available.
 [john l. coolidge (coolidge@cs.uiuc.edu, 10/91)]
 
 binaries by rich kaul (kaul@ee.eng.ohio-state.edu) for the sun386i running 
 sunos 4.0.2 are available on dsinc.dsi.com (please only after-hours usa est).
 
 binaries for the sun386i are available from compaq.com (131.168.249.254) in
 pub/sun-386i/sources and from vernam.cs.uwm.edu (129.89.9.117).
 
 a binary tree for the next by douglas scott (doug@foxtrot.ccmrc.ucsb.edu) is on
 foxtrot.ccmrc.ucsb.edu; it is missing the server, though.
 
 binaries for the sun386i are in vernam.cs.uwm.edu:/sun386i.
 
 binaries for the hp-pa are on hpcvaaz.cv.hp.com (15.255.72.15).
 
 source and binaries for hp-ux 8.*/9.0(s300/400/700/800) and domain 10.4 (68k,
 dn 10k) are available through the interworks users group; contact carol relph
 at 508-436-5046, fax 508-256-7169, or relph_c@apollo.hp.com.
 
 patches to x11r5 for solaris 2.1 by casper h.s. dik (casper@fwi.uva.nl) et al
 are on export in contrib/{r5.sunos5.patch.tar.z,r5.sunos5.patch.readme}.
 
 patches to x11r5 for the sun type 5 keyboard and the keyboard numlock are 
 available from william bailey (dbgwab@arco.com).
 
 also:
 
 binaries are available from unipalm (+44 954 211797, xtech@unipalm.co.uk), 
 probably for the sun platforms. 
 ----------------------------------------------------------------------
 
 
 david b. lewis 					faq%craft@uunet.uu.net
 
 		"just the faqs, ma'am." -- joe friday 
 -- 
 david b. lewis		temporarily at but not speaking for visual, inc.
 day: dbl@visual.com	evening: david%craft@uunet.uu.net
 