
 
 
    ...let me point out that both gui-based word-processors and text-based
    formatters both have a language; one happens to be mouse- and
    action-based, and the other symbol-based.
 
 true, but that's beside the point. this is a fact about an abstract model
 of what the gui users are doing, not about what they actually *are* doing.
 this abstract model is only apparent from the perpective of a *programmer*
 of the system. (nb: some users may see it, too, but only when they put
 aside the work at hand and start thinking like a programmer.)
 
 i'm not saying that the programmer's perspective is evil or stunted. after
 all, that's what i do, too! i am saying that ui designers must carefully
 distinguish between the user/programmer conceptual models, and they must
 ultimately serve the user of the system, not the builder of the system. 
 
 
    i don't recall the actual stats, but something like 1 in 5 people can be
    categorized as a "symbol manipulator".
 
 it would be interesting to know more about the meaning and basis for this
 claim. at any rate, i don't think this is evidence that 20% of users think
 like programmers. bankers, financial analysts, structural engineers ---
 these are all people whose work you could characterize as primarily symbol
 manipulation. but what they do is not programming, and programming is not
 required to do what they do. 
 
 to restate my previous point: yes, users want to build their own solutions;
 no, they do not want to do programming to accomplish this.
 