
 
 tcpview is the result of several problems we had at uw.  we have several
 network general sniffers which are heavily used to help debug problems on
 several hundred subnets. these are good tools, but they are 1) heavy, 
 2) hard to find when you need one, 3) limited in their software expandibility,
 4) difficult to use to upload data for analysis, 5) cannot be remotely
 operated, and 6) cannot resolve names with dns, requiring much manual 
 manipulation of the name table.  we also sometimes use tcpdump, but we found 
 it 1) too difficult for most people, 2) did not have enough information for
 many protocols, 3) could not be used interactively, 4) could not handle
 tcp streams and 5) could not read sniffer files.  however, tcpdump did do
 a reasonable job of decoding a large number of protocols, and could be easily
 modified.  tcpview is an attempt to resolve these problems
 by adding a motif interface to tcpdump and expanding its features.
 
 tcpview has been tested on a decstation 5000 and sun 4 under ultrix 4.2 and
 sunos 4.1 respectively.  it should work on the same systems as tcpdump.
 it compiles with cc and gcc on the dec and sun.  to build tcpview you will
 need motif 1.1 or better.
 
 the following files are available for anonymous ftp from 
 ftp.cac.washington.edu in /pub/networking
 
 tcpview-1.0.tar.z	tcpview and tcpdump source code
 tcpview-1.0.sun.tar.z	sun4 binaries
 tcpview-1.0.dec.tar.z	dec mips ultrix 4.2 binaries
 
 what tcpview adds to tcpdump:
 - easier interface
 - enhanced protocol decoding
 - hex display of frame
 - capture based on time, number of frames, or user interrupt
 - can show ethernet addresses with manufacturer's name
 - ethernet address host table
 - can easily follow a stream, highlighting out-of-order frames
 - can send tcp data to an external file or filter for additional
 	processing.
 
 -------------------------------------------------------------------------------
 changes to tcpdump 2.2.1
 
 new features:
 
 now reads and writes network general sniffer files.  when used with '-r', the 
 file type will be automatically detected.
 
 can now read in (and use) an snmp mib file.
 
 the hex format has been changed.
 
 new time options have been added.
 
 options were added to allow viewing and processing of the data in tcp packets.
 
 bugs were fixed in the relative tcp sequence numbers. (-s flag)
 
 new flags:
 -r	read sniffer file.  not usually needed, except for reading from stdin
 -ttt	prints delta times
 -tttt	prints times relative to the first frame
 -w	write a sniffer save file (use with -w)
 -x	print frame (minus link-level header) in hexdump format.  
 	sample output:
 
 16:36:23.349851 jeff.cac.washington.edu.1285 > nic.funet.fi.ftp: s 0:0(0) win 16384
         0000  45 00 00 28 8a 98 00 00 3c 06 7c 9c 80 5f 70 02   |  e..(....<.|.._p.
         0010  80 d6 06 64 05 05 00 15 5b 19 4a 00 00 00 00 00   |  ...d....[.j.....
         0020  50 02 40 00 4e 13 00 00 00 00 00 00 00 00         |  p.@.n.........
 
 -x	print tcp data in hexdump format (used with -z)
 -z	write tcp data to stdout (use with -t to eliminate timestamp)
 -z	write frames and tcp data to stdout
 
 
 martin m. hunt
 martinh@cac.washington.edu
 networks & distributed computing
 university of washington
 
 
 
 
 
 
 --
 
 -------------------------------------------------------------------------------
 martin hunt                            martinh@cac.washington.edu   
 networks and distributed computing     university of washington		  
 