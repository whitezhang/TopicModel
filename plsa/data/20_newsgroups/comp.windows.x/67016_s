
 (2nd posting of the question that just doesn't seem to get answered)
 
 suppose you have an idle app with a realized and mapped window that contains
 xlib graphics.  a button widget, when pressed, will cause a new item
 to be drawn in the window.  this action clearly should not call xcopyarea() 
 (or equiv) directly; instead, it should register the existence of the new
 item in a memory structure and let the same expose event handler that handles
 "regular" expose events (e.g. window manager-driven exposures) take care
 of rendering the new image.  using an expose event handler is a "proper" way
 to do this because at the time the handler is called, the xlib window is
 guaranteed to be mapped.
 
 the problem, of course, is that no expose event is generated if the window
 is already visible and mapped.  what we need to do is somehow "tickle" the
 window so that the expose handler is hit with arguments that will enable
 it to render *just* the part of the window that contains the new item.
 
 what is the best way to tickle a window to produce this behavior?
 