
 archive-name: x-faq/part1
 last-modified: 1993/04/04
 
 this article and several following contain the answers to some frequently asked 
 questions (faq) often seen in comp.windows.x. it is posted to help reduce 
 volume in this newsgroup and to provide hard-to-find information of general 
 interest.
 
 		please redistribute this article!
 
 this article includes answers to the following questions, which are loosely
 grouped into categories. questions marked with a + indicate questions new to 
 this issue; those with significant changes of content since the last issue are 
 marked by !:
 
   0)  topic: basic information sources and definitions
   1)! what books and articles on x are good for beginners?
   2)! what courses on x and various x toolkits are available?
   3)! what conferences on x are coming up?
   4)  what x-related public mailing lists are available?
   5)  how can i meet other x developers? 
   6)  what related faqs are available?
   7)  how do i ask a net-question so as to maximize helpful responses?
   8)  what publications discussing x are available?
   9)  what are these common abbreviations/acronyms?
  10)  what is the icccm? (how do i write x-friendly applications?)
  11)  what is the x consortium, and how do i join?
  12)  just what are open look and motif?
  13)  just what is openwindows?
  14)  just what is decwindows?
  15)  what is pex?
  16)  what is "low-bandwidth x" (lbx)? xremote? ppp? slip? cslip?
  17)  topic: using x in day-to-day life
  18)! what are all these different window managers?
  19)  why does my x session exit when i kill my window manager (sic)?
  20)  can i save the state of my x session, like toolplaces does?
  21)  how do i use another window manager with dec's session manager?
  22)  how do i change the keyboard auto-repeat rate?
  23)  how do i remap the keys on my keyboard to produce a string?
  24)! how do i make a screendump or print my application?
  25)  how do i make a color postscript screendump of the x display?
  26)  how do i make a screendump including the x cursor?
  27)  how do i convert/view mac/tiff/gif/sun/pict/img/fax images in x?
  28)  how can i change the titlebar of my xterm window?
  29)  where can i find the xterm control sequences?
  30)- why does the r3 xterm, et al, fail against the r4 server?
  31)  how can i use characters above ascii 127 in xterm ?
  32)  why are my xterm menus so small?
  33)  how can i print the current selection?
  34)  how does xt use environment variables in loading resources?
  35)  how to i have the r4 xdm put a picture behind the log-in window?
  36)  why isn't my path set when xdm runs my .xsession file?
  37)  how do i keep my $display when i rlogin to another machine?
  38)  how can i design my own font?
  39)  why does adding a font to the server not work (sic)?
  40)  how do i convert a ".snf" font back to ".bdf" font?
  41)  what is a general method of getting a font in usable format?
  42)  how do i use decwindows fonts on my non-decwindows server?
  43)  how do i add ".bdf" fonts to my decwindows server?
  44)! how can i set backgroundpixmap in a defaults file? (what is xpm?)
  45)  why can't i override translations? only the first item works.
  46)  how can i have xclock or oclock show different timezones?
  47)  i have xmh, but it doesn't work. where can i get mh?
  48)  why am i suddenly unable to connect to my sun x server?
  49)  why don't the r5 pex demos work on my mono screen?
  50)! how do i get my sun type-[45] keyboard fully supported by xsun?
  51)  how do i report bugs in x?
  52)  why do i get "warning: widget class version mismatch"?
  53)  where can i find a dictionary server for xwebster?
  54)  topic: obtaining x and related software and hardware
  55)  is x public-domain software?
  56)  how compatible are x11r3, r4, and r5? what changes are there?
  57)! where can i get x11r5 (source and/or binaries)?
  58)! where can i get patches to x11r5?
  59)  what is the xstuff mail-archive?
  60)! where can i get x11r4 (source and binaries)?
  61)  where can i get osf/motif?
  62)  does motif work with x11r4? x11r5?
  63)  where can i get toolkits implementing open look?
  64)! where can i get other x sources? (including r5 modifications)
  65)! where can i get interesting widgets?
  66)  where can i get a good file-selector widget?
  67)  what widget is appropriate to use as a drawing canvas?
  68)  what is the current state of the world in x terminals?
  69)  where can i get an x server with a touchscreen or lightpen?
  70)  where can i get an x server on a pc (dos or unix)?
  71)  where can i get an x server on a macintosh running macos?
  72)  where can i get x for the amiga?
  73)  where can i get a fast x server for a workstation?
  74)! where can i get a server for my high-end sun graphics board?
  75)  where can i get an "x terminal" server for my low-end sun 3/50?
  76)  what terminal emulators other than xterm are available?
  77)! where can i get an x-based editor or word-processor?
  78)  where can i get an x-based mailer?
  79)! where can i get an x-based paint/draw program?
  80)! where can i get an x-based plotting program?
  81)  where can i get an x-based spreadsheet?
  82)  where can i get x-based project-management software?
  83)  where can i get an x-based postscript previewer?
  84)  where can i get an x-based gks package?
  85)  where can i get an x-based pex package?
  86)  where can i get an x-based tex or dvi previewer?
  87)  where can i get an x-based troff previewer?
  88)! where can i get a wysiwyg interface builder?
  89)  where can i find x tools callable from shell scripts?
  90)  where can i get an x-based debugger?
  91)! how can i "tee" an x program identically to several displays?
  92)  topic: building the x distribution [topic needs updating to r5]
  93)  what's a good source of information on configuring the x build?
  94)  why doesn't my sun with a cg6 work with r5?
  95)  why doesn't my sun with sunos 4.1 know about _dlsym, etc.?
  96)  what is this strange problem building x clients on sunos 4.1.2?
  97)  why can't gcc compile x11r4 on my sparc?
  98)  what are these i/o errors running x built with gcc?
  99)  what are these problems compiling x11r4 on the older sun3?
 100)  what are these problems compiling the x server on sunos 4.1.1?
 101)  what are these problems using r4 shared libraries on sunos 4?
 102)  can olit programs run with r5 xt? (_xtqstring undefined)
 103)  how do i get around the sunos 4.1 security hole?
 104)  how do i get around the frame-buffer security hole?
 105)  topic: building x programs 
 106)  what is imake?
 107)  where can i get imake?
 108)  i have a program with an imakefile but no makefile. what to do?
 109)  why can't i link to the xlib shape routines?
 110)  what are these problems with "_xtinherit not found" on the sun?
 111)  why can't i compile my r3 xaw contrib programs under the new x?
 112)  topic: programming problems and puzzles
 113)  why doesn't my program get the keystrokes i select for (sic)?
 114)  how do i figure out what window manager is running?
 115)  is there a skeleton x program available?
 116)  why does xtgetvalues not work for me (sic)?
 117)  why don't xtconfigurewidget/xtresizewidget/xtmovewidget work?
 118)  why isn't there an xtreparentwidget call like xreparentwindow?
 119)  i'm writing a widget and can't use a float as a resource value.
 120)  is this a memory leak in the x11r4 xtdestroywidget()?!
 121)  are callbacks guaranteed to be called in the order registered?
 122)  why doesn't xtdestroywidget() actually destroy the widget?
 123)  how do i query the user synchronously using xt?
 124)  how do i determine the name of an existing widget?
 125)  why do i get a baddrawable error drawing to xtwindow(widget)?
 126)  why do i get a badmatch error when calling xgetimage?
 127)  how can my application tell if it is being run under x?
 128)  how do i make a "busy cursor" while my application is computing?
 129)  how do i fork without hanging my parent x program?
 130)  can i make xt or xlib calls from a signal handler?
 131)  what are these "xlib sequence lost" errors?
 132)  how can my xt program handle socket, pipe, or file input?
 133)  how do i simulate a button press/release event for a widget?
 134)  why doesn't anything appear when i run this simple program?
 135)  what is the difference between a screen and a screen?
 136)  can i use c++ with x11? motif? xview?
 137)  where can i obtain alternate language bindings to x?
 138)  can xgetwindowattributes get a window's background pixel/pixmap?
 139)  how do i create a transparent window?
 140)  why doesn't gxxor produce mathematically-correct color values?
 141)  why does every color i allocate show up as black?
 142)  why can't my program get a standard colormap?
 143)  why does the pixmap i copy to the screen show up as garbage? 
 144)  how do i check whether a window id is valid?
 145)  can i have two applications draw to the same window?
 146)  why can't my program work with tvtwm or swm?
 147)  how do i keep a window from being resized by the user?
 148)  how do i keep a window in the foreground at all times?
 149)  how do i make text and bitmaps blink in x?
 150)+ how do i get a double-click in xlib?
 151)! how do i render rotated text?
 152)  what is the x registry? (how do i reserve names?)
 
 if you have suggestions or corrections for any of these answers or any 
 additional information, please send them directly to uunet!craft!faq;
 the information will be included in the next revision (or possibly the one 
 after that; thanks for the many suggestions which haven't been incorporated 
 yet). 
 
 this version of the faq is in the process of having r3 information replaced
 by r5 information.
 
 this posting is intended to be distributed at approximately the beginning of 
 each month. new versions are archived on export.lcs.mit.edu and are also 
 available from mail-server@pit-manager.mit.edu and archive-server@nic.switch.ch
 (send "help").
 
 the information contained herein has been gathered from a variety of sources. 
 in many cases attribution has been lost; if you would like to claim 
 responsibility for a particular item, please let me know. 
 
 conventions used below: telephone numbers tend to be bell-system unless 
 otherwise noted; prices on items are not included; email addresses are those
 that work from the us.
 
 x window system is a trademark of the massachusetts institute of technology. 
 other trademarks are the property of their respective owners.
 
 (note: a script by george ferguson (ferguson@cs.rochester.edu) to pretty-print
 this faq is available from ugle.unit.no:/pub/x11/contrib/xfaq2texinfo.)
 
 ----------------------------------------------------------------------
 subject:   0)  topic: basic information sources and definitions
 ----------------------------------------------------------------------
 subject:   1)! what books and articles on x are good for beginners?
 
 	ken lee of synoptics (klee@synoptics.com) regularly posts to 
 comp.windows.x and ba.windows.x a bibliography containing cites of all known 
 reference books and how-to manuals and also cites of selected technical 
 articles on x and x programming; it is ftp-able as 
 	export.lcs.mit.edu:/contrib/xbibliography and 
 	gatekeeper.dec.com:/pub/x11/contrib/xbibliography
 
 here is an unordered set of the reference books and tutorials most useful for
 beginners; most appear on that list [comments are gathered from a variety of 
 places and are unattributable]:
 
 asente, paul j., and swick, ralph r., "x window system toolkit, the complete
 programmer's guide and specification", digital press, 1990.  the bible on xt. a
 treasury of information, excellent and invaluable.  distributed by digital 
 press, isbn 1-55558-051-3, order number ey-e757e-dp; and by prentice-hall, 
 isbn 0-13-972191-6. also available through dec direct at 1-800-digital. 
 [the examples are on export.lcs.mit.edu in contrib/ and on gatekeeper.dec.com 
 (16.1.0.2) in pub/x11/contrib as asente-swick.examples.tar.z.  they were also 
 posted to comp.sources.x as xt-examples/part0[1-5].]
 
 jones, oliver, introduction to the x window system, prentice-hall, 1988, 1989.
 isbn 0-13-499997-5. an excellent introduction to programming with xlib.  
 written with the programmer in mind, this book includes many practical tips 
 that are not found anywhere else. this book is not as broad as the o'reilly 
 xlib tutorial, but jones is an experienced x programmer and this shows in the 
 quality and depth of the material in the book. originally written for x11r1, 
 recent printings have included corrections and additions and current material.
  
 young, doug. "the x window system: applications and programming with xt (motif 
 version)," prentice hall, 1989 (isbn 0-13-497074-8). the excellent tutorial 
 "x window system programming and applications with xt," (isbn 0-13-972167-3) 
 updated for motif. [the examples are available on export; the ones from the 
 motif version are in ~ftp/contrib/young.motif.tar.z.]
 
 young, doug and john pew, "the x window system: programming and applications 
 with xt, open look edition" (isbn 0-13-982992-x). the tutorial rewritten for 
 olit, with new examples and drag/drop information. [examples are on export in
 youg.olit.tar.z and in you openwindows 3 distribution in 
 $openwinhome/share/src/olit/olitbook.]
 
 heller, dan. "motif programmers manual". the 6th volume in the o'reilly series
 covers motif application programming; it's full of good examples. with motif
 reference pages. (isbn 0-9937175-70-6.)  [the examples are available on uunet
 in comp.sources.x and nutshell archives.] [a motif 1.2 will be out soon.]
  
 scheifler, robert, and james gettys, with jim flowers and david rosenthal, "x 
 window system: the complete reference to xlib, x protocol, icccm, xlfd, x 
 version 11, release 5, third edition," digital press, 1992. "the bible" in its 
 latest revision, an enhanced version of x documentation by the authors of the 
 xlib documentation. this is the most complete published description of the x 
 programming interface and x protocol. it is the primary reference work and is 
 not introductory tutorial documentation; additional tutorial works will usually
 be needed by most new x programmers.  digital press order ey-j802e-dp, isbn 
 0-13-971201-1.
  	
 nye, adrian, "xlib programming manual, volume 1" and "xlib reference manual, 
 volume 2," o'reilly and associates. a superset of the mit x documentation; the 
 first volume is a tutorial with broad coverage of xlib, and the second 
 contains reference pages for xlib functions and many useful reference 
 appendices.  both cover x11r5 (and r4). isbn 0-937175-26-9 (volume 1) and isbn 
 0-937175-27-7 (volume 2). 
 
 nye, adrian, and tim o'reilly, "x toolkit programming manual, volume 4,"
 o'reilly and associates, 1989. the folks at o'reilly give their comprehensive
 treatment to programming with the mit intrinsics; r4 versions are now
 available, as is a motif 1.1 version (volume 4m).
 
 o'reilly, tim, ed.,  "x toolkit reference manual, volume 5," o'reilly and 
 associates. a professional reference manual for the mit x11r4 and x11r5 xt.
 
 mansfield, niall. "the x window system: a user's guide," addison-wesley, 1989.
 a tutorial introduction to using x, now upgraded for r4. isbn 0-201-51341-2.
 
 quercia, valerie and tim o'reilly. "x window system user's guide," o'reilly and
 associates. a tutorial introduction to using x. isbn 0-937175-36-6.
 also available in r4 and motif flavors.
 
 mui, linda and eric pearce. "x window system administrator's guide for x11 r4 
 and r5" [ora volume 8]. help for x users and administrators. 
 isbn 0-937175-83-8.
 
 (prentice-hall ordering is 201-767-5937. o'reilly ordering is 800-998-9938.)
 
 in addition, check the x11r4 and x11r5 core distribution in doc/tutorials for 
 some useful papers and tutorials, particularly the file answers.txt.  "late 
 night's top ten x11 questions" by dave lemke (lemke@ncd.com) and stuart marks 
 (smarks@sun.com) answers other common questions and some of these here in more
 detail.
 
 new r5 versions of the o'reilly references (not yet volume 6) are now available
 [8/92].  a single volume, "programmer's supplement for r5" by david flanagan, 
 provides an overview of new r5 features; it includes man pages for xlib, xt, 
 and xmu. [isbn  0-937175-86-2]
 
 ----------------------------------------------------------------------
 subject:   2)! what courses on x and various x toolkits are available?
 
 	advanced computing environments periodically offers at least a two-day
 introduction course. contact susie karlson at 415-941-3399 for information.
 
 	at&t offers training in xlib and in the xol set. contact at&t corporate
 education & training for more info; 1-800-trainer in the usa.
 
 	bim educational services offers training in x administration and in
 programming with xt/motif and open windows; the courses are given near 
 brussels. info: edu@sunbim.be, voice +32-(0)2-7595925, fax +32-(0)2-7599209.
 
 	communica software consultants offers three-day hands-on courses in x 
 designed for the x window system developer and programmer. contact chris 
 clarkson, telephone 61 8 3732523, e-mail communica@communica.oz.au. [12/92]
 
 	cora computer technologies (516-485-7343) offers several courses.
 
 	ghct offers a one week lecture/lab course for programmmers designed by
 douglas young based on his book "the x window system: programming and applica-
 tions with xt, osf/motif edition". information: brian stell (415-966-8805 or
 ghct!brian@sgi.com).
 
 	ghg offers a range of courses on x and motif. information: 713-488-8806
 or training-info@ghg.hou.tx.us.
 
 	hands on learning has live training and self-paced video workshops on 
 topics such as using and/or programming x, xlib, xm, xt, and widget-writing. 
 information: 617-272-0088, 800-248-9133.
 
 	hewlett-packard (1-800-hpclass; or contact your local hp center) offers
 a 2-day "introduction to x", a 5-day xlib course, a 1-day xt and motif 1.1 
 seminar, and a 5-day motif lab course.
 
 	integrated computer solutions, inc., offers several multi-day, hands-on
 courses on x, xt, and the xaw and motif widget sets, in particular. information
 is available at 617-621-0060 and info@ics.com.
 
 	intelligent visual computing teaches several lab courses on-site for
 motif and xview. ivc is at 1-800-776-2810 or +1 919-481-1353 or at 
 info@ivc.com.
 
 	iris computing laboratories offers five-day xlib and xt courses.
 info: +1-505-988-2670 or info@spectro.com.
 
 	ixi limited (+44 223 462 131) offers regular x training courses for 
 both programmers and non-technical managers. see also: unipalm, below.
 
 	learning tree international offers a four-day course in x window system
 applications development, including xlib and some information on motif.  for 
 more info call 800-824-9155 (213-417-3484); 613-748-7741 in canada. courses are
 offered in major north american cities; also in london, stockholm, tokyo, and 
 elsewhere.
 
 	lurnix offers 4-day "type-along courses" on xt; the course is being
 ported from xaw to xm. information is available at 800-433-9337 (in ca: -9338).
 
 	mitch trachtenberg and associates offers regular 5-day lab courses on
 programming with osf/motif, usually in but not limited to cambridge, ma. 
 info: +1 617-225-0440, info@mta.com.
 
 	non standard logics (+33 (1) 43 36 77 50; requests@nsl.fr) offers
 courses on programming with xlib, motif, and creating motif widgets.
 
 	osf educational services (617-621-8778) offers one-day seminars and 
 one-week motif lab courses.
 
 	john a. pew offers a 5-day course on olit, possibly based on his book
 on that subject; 408-224-5739.
 
 	sco (+44 923 816344, scol-info@sco.com) offers training for its open 
 desktop (motif) environment in the uk and europe.
 
 	software pundits (617-270-0639) offers a range of courses.
 
 	technology exchange (617-944-3700) offers a 4-day xlib/xt/motif course.
 
 	telesoft is now offering a 1-day plus 3-day seminar on x and motif.
 information: bruce sherman (619-457-2700, bds@telesoft.com).
 
 	unipalm xtech offers osf's 5-day motif course and a 1-day overview on 
 x.  information: unipalm training at +44 952  211797, xtech@unipalm.co.uk.
 
 	the university of edinburgh is developing a series of courses on x and
 related topics primarily for non-profit-making training in academia but also 
 for commercial use. information: cliff booth, unipalm ltd, phone +44 223 
 420002, fax +44 223 426868.
 
 	various other vendors are also beginning to offer x training, usually 
 specific to a proprietary toolkit or to xt and a proprietary widget set: dec 
 is offering xlib courses; sun offers an xview course.
 
 	various universities are offering short x courses or overviews: ucla,
 dartmouth, university of lowell, university of canberra (within australia: 
 062-522422) ... 
 	uc berkeley extension will have a one week x/motif class for 
 programmers in san francisco starting on july 29.  the class will have a 
 hands-on lab. for more information contact ucbx at 415 323 8141.
 
 	among the best places to find courses are at the various unix 
 conferences -- uniforum, usenix, unix expo, xhibition, the mit x technical
 conference, the acm tutorial weeks, &c.
 
 	in addition, the x consortium posts approximately quarterly a list of
 unendorsed speakers and consultants who can provide talks on a variety of x 
 topics.
 
 ----------------------------------------------------------------------
 subject:   3)! what conferences on x are coming up?
 
 	the xhibition 93 x trade show and conference, with tutorials, panels, 
 presentations, and vendor exhibits, will be held at the san jose convention
 center june 7-11, 1993.  information: +1 617 621 0060, xhibit@ics.com.
 
 	the tcl/tk workshop will be held at ucal berkeley june 10-11, 1993.
 information: tcl93@cs.berkeley.edu.
 
 	the 1993 andrew technical conference and consortium annual meeting will
 be held june 24-25, 1993, in pittsburgh. information: 
 wilfred.hansen@cs.cmu.edu.
 
 	the european x user group holds an annual conference which typically 
 includes includes paper presentations and a vendor exhibit. exug'93, "x in the
 real world and multimedia" will be held 9/16-9/17 at the imperial college of
 science and technology, london. information: exug@demon.co.uk, niall@uit.co.uk 
 or p.whitehead@cc.ic.ac.uk, +44 (0) 223 426534, fax +44 (0) 223 420251.
 
 	the motif show is held in washington to coincide with the fedunix and 
 the federal open systems conference (usually december). information: 
 motif@fedunix.org or paller@fedunix.org, 301-229-1062, fax 301-229-1063.
 
 	the mit x technical conference is typically held in january in boston.
 registration information is available from registration@expo.lcs.mit.edu.
 
 	the xworld conference and exhibition includes tutorials, panels, 
 presentations and vendor exhibits. it is typically held in march in new york 
 city.  information: sigs publication group at 212-274-9135.
 
 
 	other trade shows -- unixexpo, uniforum, siggraph -- show an increasing
 presence of x, including tutorials and exhibits.
 
 ----------------------------------------------------------------------
 subject:   4)  what x-related public mailing lists are available?
 
 	the xpert mailing list is the general, public mailing list on x
 maintained by the x consortium. the mailings are gatewayed, so xpert is almost 
 identical to the comp.windows.x usenet newsgroup. 
 
 	***	if you get comp.windows.x, you don't need to 	***
 	***	be added to the xpert mailing list. 		***
 
 	otherwise, you can join the list to receive x information 
 electronically. it is best to find a local distribution; perhaps someone within
 your company is already receiving the mailing. as a last resort, send mail to 
 xpert-request@expo.lcs.mit.edu with a valid return electronic address. 
 
 	the xannounce mailing list carries major x announcements, such as new
 releases (including public patches from mit), public reviews, adoption of 
 standards by the mit x consortium, and conference announcements.  it does not 
 carry advertisements, source code, patches, or questions.  if you already 
 receive the usenet news group comp.windows.x.announce or the xpert mailing 
 list, you don't need to be added to the xannounce mailing list.  otherwise, to 
 subscribe, send a request to xannounce-request@expo.lcs.mit.edu. note: only 
 redistribution addresses will be accepted for this list -- i.e. no personal 
 addresses. if you wish to receive xannounce yourself, please contact your mail 
 administrator to set up a local redistribution list and to put you on it.  
 	comp.windows.x.apps is not gatewayed to a mailing list.
 
 	in addition, the x consortium sponsors these public lists:
 		bug-clx         clx bug reports and discussions
 		x-ada           x and ada
 		x11-3d          people interested in x and 3d graphics
 		ximage          people interested in image processing and x
 		xvideo          discussion of video extensions for x
 	to subscribe to one of these lists, assuming no-one in your 
 organization already receives it, send mail to <list>-request@expo.lcs.mit.edu
 with the subject line including the name of the list in caps and the request
 "addition request".  in the body of the message be sure to give an address for 
 your local distribution which is accessible from mit (eddie.mit.edu).
 
 	a mailing list for topics related to open look is sponsored by greg
 pasquariello of unify corporation; send to openlook-request@unify.com (or
 openlook-request%unify@uunet.uu.net) for information. 
 	a mailing list for bugs in the publicly-available version of xview
 source, in particular, is sponsored by sun; send for information to 
 xviewbug-trackers-request@sun.com. 
 	a mailing list for topics related to motif is sponsored by kee hinckley
 of alfalfa software, inc.; send to motif-request@alfalfa.com for information. 
 (this group is gatewayed to comp.windows.x.motif.)
 	a mailing list for topics related to the xpm pixmap-format is sponsored
 by arnaud le hors of group bull; send to xpm-talk-request@sa.inria.fr for
 information. [1/91]
 	a mailing list discussing interviews can be subscribed to by sending to
 interviews-request@interviews.stanford.edu.
 	a mailing list (amiga-x11@nic.funet.fi) for topics related to the port 
 of x11 to the amiga can be subscribed by sending to mailserver@nic.funet.fi a 
 message containing
 		subject: adding myself to amiga-x11
 		subs amiga-x11 your real name
 	a mailing list discussing parcplace's (formerly solbourne's) oi (object
 interface) toolkit can be subscribed to at oi-users-requests@bbn.com.
 	a mailing list discussing multi-threaded xlib can be subscribed to at
 mt-xlib-request@xsoft.xerox.com.
 
 ----------------------------------------------------------------------
 subject:   5)  how can i meet other x developers? 
 
 	o'reilly and associates sponsors a mailing list for the use of x user 
 group organizers; subscribe by sending to listserv@ora.com the message 
 "subscribe xgroups your@internet.address".
 
 	local area x user's groups are listed in issue 4 of o'reilly's x 
 resource journal; a list may also be available from xug@ics.com.
 
 	the french x user group is called afux and is based in sophia antipolis
 by cerics. information can be obtained from miss vasseur or miss forest; bp 
 148; 157, rue albert einstein; 06561 valbonne cedex; phone: +33 93 95 45 00 / 
 45 01; fax: +33 93 95 48 57.  [10/90]
 
 	the european x user group was formed in 1989 to represent x users in 
 europe.  it holds technical conferences at regular intervals. the exug also 
 publishes a regular newsletter which is distributed free of charge to members. 
 the exug also runs a email mailing list for members which is frequently used to
 address issues of european interest in x. the exug can be contacted at
 p.whitehead@cc.ic.ac.uk, +44 (071) 225 8754, fax +44 (071) 823 9497.
 
 	gxugiv is the german x user's group in vorbereitung ("in preparation")
 being formed for x programmers and users; it is associated with the exug. all
 interested should contact olaf heimburger (+49 30 7 79 54 64; and at
 mcvax!unido!tub!olaf).
 
 ----------------------------------------------------------------------
 subject:   6)  what related faqs are available?
 
 	liam r. e. quin (lee@sq.sq.com) posts a faq on open look to 
 comp.windows.open-look.  
 	jan newmarch (jan@pandonia.canberra.edu.au) posts a faq on motif to 
 comp.windows.x.motif.
 	peter ware (ware@cis.ohio-state.edu) posts a faq for
 comp.windows.x.intrinsics; it is on export in contrib/faq-xt.
 	art mulder (art@cs.ualberta.ca) posts to comp.windows.x a faq on 
 maximizing the performance of x.
 	steve kotsopoulos (steve@ecf.toronto.edu) posts to comp.windows.x a faq
 about using x on intel-based unix systems.
 	the faq in alt.binaries.pictures contains information on viewing images
 with x and on massaging image formats.
 	the faq in comp.mail.mh (gatewayed to mh-users@ics.uci.edu) includes a 
 section on xmh.
 	the faq in comp.lang.lisp contains information on several interface
 tools and toolkits.
 	there exists a pex/phigs faq.
 
 ----------------------------------------------------------------------
 subject:   7)  how do i ask a net-question so as to maximize helpful responses?
 
 	when asking for help on the net or x mailing lists, be sure to include 
 all information about your setup and what you are doing.  the more specific you
 are, the more likely someone will spot an error in what you are doing.  without
 all the details, people who want to help you often have to guess -- if they are
 able to respond at all.
 
 	always mention what version of x you are using and where you got it 
 from. if your server came from a different source as the rest of your x system,
 give details of that, too.  give the machine type, operating system, and o/s 
 version for both the client and server machine.  it may also be appropriate to 
 mention the window manager, compiler, and display hardware type you are using.
 
 	then tell exactly what you are doing, exactly what happens, and what
 you expected/wanted to happen.  if it is a command that fails, include the 
 exact transcript of your session in the message.  if a program you wrote 
 doesn't work the way you expect, include as little of the source necessary 
 (just a small test case, please!) for readers to reproduce the problem.
 
 ----------------------------------------------------------------------
 subject:   8)  what publications discussing x are available?
 
 	the trade magazines (unix world, unix review, computer language, etc.)
 are publishing more articles on x.  two x-specific publications include:
 
 	- o'reilly and associates publishes "the x resource: a practical 
 journal of the x window system" (103 morris st. #a, sebastapol, ca 95472).  
 editorial information: adrian nye, adrian@ora.com.
 
 	- the x journal is started bi-monthly publication september 1991 on a 
 variety of x topics. subscription information: the x journal, subscriber 
 services, dept xxx, p.o. box 3000, denville, nj 07834, usa. editorial 
 information: editors%topgun@uunet.uu.net.
 
 ----------------------------------------------------------------------
 subject:   9)  what are these common abbreviations/acronyms?
 
 	xt: the x toolkit intrinsics is a library layered on xlib which 
 provides the functionality from which the widget sets are built. an "xt-based" 
 program is an application which uses one of those widget sets and which uses 
 intrinsics mechanisms to manipulate the widgets.
 	xmu: the xmu library is a collection of miscellaneous utility functions
 useful in building various applications and widgets.
 	xaw: the athena widget set is the mit-implemented sample widget set
 distributed with x11 source.
 	xm: the osf/motif widget set from the open software foundation; binary
 kits are available from many hardware vendors.
 	xhp (xw): the hewlett-packard widget set was originally based on r2++, 
 but several sets of patches exist which bring it up to r3, as it is distributed
 on the x11r4 tapes. supplemental patches are available to use it with r4/r5.
 	clx: the common lisp x interface is a common lisp equivalent to xlib.
 	xdmcp: the x display manager protocol provides a uniform mechanism for 
 a display such as an x terminal to request login service from a remote host.
 	xlfd: the x logical font description conventions describes a standard
 logical font description and conventions to be used by clients so that they
 can query and access those resources.
 	rtfm: common expert-speak meaning "please locate and consult the 
 relevant documentation -- read the forgotten manual".
 	utsl: a common expression meaning "take advantage of the fact that you 
 aren't limited by a binary license -- use the source, luke".
 	api: application-programmer interface. the function calls, etc., in
 a programming library.
 	bdf: bitmap distribution format; a human-readable format for uncompiled
 x fonts.
 	gui: graphical user interface.
 	uil: the user interface language, part of osf/motif which lets 
 programmers specify a widget hierarchy in a simple "outline" form
 	wcl: the widget creation language, a package which extends the 
 understanding of the xt resource format such that a widget hierarchy and 
 actions on the widgets can be specified through the resources file
 	gil: the file format put out by sun's openwindows developers guide 3.0
 	uims: user interface management system
 
 ----------------------------------------------------------------------
 subject:  10)  what is the icccm? (how do i write x-friendly applications?)
 
 	the inter-client communication conventions manual is one of the 
 official x consortium standards documents that define the x environment. it 
 describes the conventions that clients must observe to coexist peacefully with 
 other clients sharing the same server.  if you are writing x clients, you need 
 to read and understand the icccm,  in particular the sections discussing the 
 selection mechanism and the interaction between your client and the window 
 manager.  get it either:
 	- as part of the r4 distribution from mit
 	- in the later editions of the scheifler/gettys "x window system" book
 	- as an appendix in the new version of o'reilly's volume 0, "x protocol
 reference manual." a version in old copies of their volume 1 is obsolete.
 	the version in the digital press book is much more readable, thanks to 
 the efforts of digital press's editors to improve the english and the 
 presentation.
 
 [from david rosenthal, 10/90]
 
 	- the icccm was updated for r5; updates are published in o'reilly's
 "programmer's supplement for release 5". the complete document is on the r5
 tapes.
 
 	alternate definition: the icccm is generally the m in "rtfm" and is
 the most-important of the least-read x documents.
 
 ----------------------------------------------------------------------
 subject:  11)  what is the x consortium, and how do i join?
 
 	the mit x consortium was formed in january of 1988 to further the
 development of the x window system and has as its major goal the promotion of 
 cooperation within the computer industry in the creation of standard software 
 interfaces at all layers in the x window system environment.
 	mit's role is to provide the vendor-neutral architectural and 
 administrative leadership required to make this work. membership in the 
 consortium open to any organization.  there are two categories of membership, 
 member (for large organizations) and affiliate (for smaller organizations).
 	most of the consortium's activities take place via electronic mail, 
 with meetings when required.  as designs and specifications take shape,
 interest groups are formed from experts in the participating organizations.  
 typically a small multi-organization architecture team leads the design, with 
 others acting as close observers and reviewers.  once a complete specification
 is produced, it may be submitted for formal technical review by the consortium
 as a proposed standard.  the standards process typically includes public 
 review (outside the consortium) and a demonstration of proof of concept.
 	your involvement in the public review process or as a member or 
 affiliate of the consortium is welcomed.
 	write to: bob scheifler, mit x consortium, laboratory for computer 
 science, 545 technology square, cambridge, ma 02139.
 
 [for complete information see the xconsortium man page from the x11r4
 distribution, from which this information is adapted.] [2/90]
 
 ----------------------------------------------------------------------
 subject:  12)  just what are open look and motif?
 
 	open look and motif are two graphical user interfaces (guis). open look
 was developed by sun with help from at&t and many industry reviewers; motif was
 developed by the open software foundation (osf) with input from many osf 
 members. 
 
 	open look is primarily a user-interface specification and style-guide; 
 there are several toolkits which can be used to produce open look applications.
 motif includes an api specification; the only sanctioned motif toolkit is the 
 one from osf. however, there are other toolkits which can be used to produce 
 programs which look and behave like osf/motif; one of these, parcplace's 
 (formerly solbourne's) oi, is a "virtual toolkit" which provides objects in the
 style of open look and motif, at the user's choice.
 
 	open look gui is also the name of a product from at&t, comprising 
 their open look intrinsics toolkit and a variety of applications.
 
 [thanks to ian darwin, ian@sq.com, 5/91]
 
 ----------------------------------------------------------------------
 subject:  13)  just what is openwindows?
 
 	open windows (3.0) is a sun product that encompasses: a window system 
 that combines a news and x11-compliant server (x/news); a user-interface 
 specification (open look) and a series of toolkits that implement it (including
 the sunview-like xview and the xt-based olit); xlib and xt implementations; and
 a number of utilities (olwm window manager, filemgr, shelltool, etc.).
 
 [thanks to frank greco (fgreco@govt.shearson.com), 8/90; 4/92] 
 
 ----------------------------------------------------------------------
 subject:  14)  just what is decwindows?
 
 	decwindows is a dec product that encompasses: an x11 server; the xui 
 toolkit, including the dwt widget set and uil; xlib and xt implementations; a 
 session manager; and a number of utilities (dxwm window manager, dxcalendar, 
 dxpsview, etc.).
 
 (at some point motif flavors of the toolkit and applications will be shipped.)
 [8/90] 
 
 ----------------------------------------------------------------------
 subject:  15)  what is pex?
 
 	pex is the "phigs extension to x".
 	phigs stands for "programmer's hierarchical interactive graphics 
 system" and is essentially a library of functions that simplifies the creation 
 and manipulation of 3d graphics. many platforms are capable of performing in 
 hardware the computations involved in rendering 3d objects; the extension 
 allows the client (phigs in this case) to take advantage of the specialized 
 hardware for 3d graphics.
 	sun microsystems is currently contracted to develop a freely 
 redistributable (copyright similar to the current x copyright) sample
 implementation.  source and documentation are available in the r5 release.
 several vendors are currently selling independently-developed pex servers for 
 their workstations and x terminals.
 
 [last modified 10/91]
 
 ----------------------------------------------------------------------
 subject:  16)  what is "low-bandwidth x" (lbx)? xremote? ppp? slip? cslip?
 
 there are several options for using x over serial lines:
 
 slip - serial line ip; this is both a mechanism and a protocol for sending ip
 packets over point-to-point serial links. it has been around for several years,
 and implementations are available for many of the major tcp/ip implementations.
 most x terminal vendors supply this as a checkoff item, although nobody really 
 ever uses it since it is horribly slow.  the tcp/ip headers add 40 bytes per 
 packet and the tcp/ip encoding of the x protocol is rather verbose (rightfully 
 so; it is optimized for packing and unpacking over high-speed links). 
 
 cslip - compressed header slip; this is a variant of slip that compresses the 
 40 bytes of tcp/ip headers down to about 5 or 6 bytes.  it still doesn't do 
 anything about reencoding the x protocol.  modems that do compression can help,
 but they increase packet latency (it takes time to dribble the uncompressed 
 data through typical serial interfaces, plus the compression assembly time).
 
 ppp - point-to-point protocol; this is an emerging standard for point-to-point
 links over serial lines that has a more complete set of option negotiation than
 slip.  a growing number of people see the combination of ppp for the serial 
 line management and cslip for the header compression as becoming common for 
 running normal tcp/ip protocols over serial lines.  running raw x over the wire
 still needs compression somewhere to make it usable.
 
 xremote - this is the name of both a protocol and set of products originally
 developed by ncd for squeezing the x protocol over serial lines.  in addition 
 to using a low level transport mechanism similar to ppp/cslip, xremote removes 
 redundancies in the x protocol by sending deltas against previous packets and 
 using lzw to compress the entire data stream.  this work is done by either a 
 pseudo-x server or "proxy" running on the host or in a terminal server.  there 
 are several advantages to doing compression outside the modem:
    (1)	you don't *have* to have compressing modems in there if you wouldn't 
 	otherwise be using them (e.g. if you were going to be directly 
 	connected), and
    (2)	it reduces the i/o overhead by cutting down on the number of bytes that
 	have to cross the serial interface, and
    (3)	in addition to the effects of #2, it reduces the latency in delivering 
 	packets by not requiring the modem to buffer up the data waiting for 
 	blocks to compress.
 
 lbx - low bandwidth x; this is an x consortium project that is working on a
 standard for this area.  it is being chaired by ncd and xerox and is using 
 ncd's xremote protocol as a stepping stone in developing the new protocol.  lbx
 will go beyond xremote by adding proxy caching of commonly-used information 
 (e.g. connection setup data, large window properties, font metrics, keymaps, 
 etc.) and a more efficient encoding of the x protocol. the hope is to have a 
 standard ready for public review in the first half of next year and a sample 
 implementation available in r6.
 
 additional technical information about how xremote works and a few notes on how
 lbx might be different are available via anonymous ftp from export.lcs.mit.edu
 in contrib/ in the following files:
         xremote-slides.ps               slides describing xremote
         xremote-lbx-diffs.ps            more slides describing some of lbx
 
 [information provided by jim fulton, jim@ncd.com; 7/92]
 
 	there is also a set of slides on export from jim fulton's talk at
 the 7th mit x technical conference.
 
 ----------------------------------------------------------------------
 subject:  17)  topic: using x in day-to-day life
 ----------------------------------------------------------------------
 subject:  18)! what are all these different window managers?
 
 	the window manager in x is just another client -- it is not part of the
 x window system, although it enjoys special privileges -- and so there is
 no single window manager; instead, there are many which support different ways 
 for the user to interact with windows and different styles of window layout,
 decoration, and keyboard and colormap focus. in approximate chronological order
 (generally, the more recent ones are more conformant with the icccm):
 
 	wm: this simple title-bar window manager was phased out in r2 or r3
 	uwm: the universal window manager is still popular for its speed, 
 although it is very outdated. moved to contrib/ on the r4 tape.
 	twm (old): tom's window manager was among the first non-mit window 
 managers and offered the user a great deal of customization options in a
 re-parenting window manager. 
 	awm: the ardent window manager remains a hotbed for hackers and offers
 some features (dynamic menus) not found on more current window managers
 	cwm: cwm is part of the andrew system. 
 	rtl: siemen's window manager tiles windows so that they don't overlap
 and resizes the window with the focus to its preferred size.
 	dxwm: digital's dxwm is part of the decwindows offering
 	hpwm: hp's window manager offers a 3d look; it is a precursor of mwm
 	mwm: the motif window manager is part of the osf/motif toolkit
 	tekwm: tektronix's window manager offering 
 	olwm (sun): olwm implements the open look gui and some of the style
 guide functionality
 	olwm (at&t): ditto
 	gwm: bull's generic window manager emulates others with a built-in
 lisp interpreter. version 1.7h (10/91) is on the r5 contrib tape; 1.7n is on
 avahi.inria.fr and export.lcs.mit.edu. [3/93]
 	m_swm: the sigma window manager is on the r4 tape
 	pswm: sun's postscript-based pswm is part of the openwindows release
 	swm: solbourne's swm is based on the oi toolkit and offers multiple
 gui support and also a panned virtual window; configuration information comes
 from the resources file
 	twm (new): mit's new tab window manager from the r4 tape is a reworked
 twm and is the basis for several derivatives, including the one on the r5 tape
 	vtwm: vtwm offers some of the virtual-desktop features of swm, with a
 single-root window implementation; it is based on the r4 twm and is available
 on archive servers. a new version, vtwm-5.0, is based on r5.9 and is available 
 from export. [3/92]
 	tvtwm: tom's virtual tab window manager is also based on the r4 twm
 and provides a virtual desktop modeled on the virtual-root window of swm. it is
 available on archive servers
 	olvwm: the vtwm-style virtual-desktop added to sun's olwm. it is 
 available on archive servers; version 3.3 [1/93] is on export.
 	mvwm: the vtwm-style virtual-desktop added to osf's mwm. a beta version
 is floating around (most recently from suresh@unipalm.co.uk) but requires a 
 source license to osf/motif 1.1.3 [3/92].
 	ncdwm: the window manager local to ncd terminals offers an mwm look 
 	xdswm: the window manager local to visual technology's terminals 
 	ctwm: claude lecommandeur's (lecom@sic.epfl.ch) modification of the r5 
 twm offers 32 virtual screens in the fashion of hp vuewm; source is on export.
 version 2.2.2 [2/93] also offers the window overview used in vtwm and tvtwm.
 	vuewm: hp's mwm-based window manager offers configurable workspaces.
 	4dwm: sgi's enhanced mwm
 	piewm: this version of tvtwm offers pie menus
 
 ----------------------------------------------------------------------
 subject:  19)  why does my x session exit when i kill my window manager (sic)?
 
 	it needn't.  what is probably happening is that you are running your 
 window manager as the last job in your .xsession or .xinitrc file; your x 
 session runs only as long as the last job is running, and so killing your 
 window manager is equivalent to logging out. instead, run the window manager in
 the background, and as the last job instead invoke something safe like:
 		exec xterm -name login -rv -iconic
 or any special client of your devising which exits on some user action.
 your x session will continue until you explicitly logout of this window, 
 whether or not you kill or restart your window manager.
 
 ----------------------------------------------------------------------
 subject:  20)  can i save the state of my x session, like toolplaces does?
 
 	although no known window manager directly supports such a feature --
 which may be equivalent to writing out a .xinitrc or .xsession file naming the
 geometry and wm_command of each application (but olvwm may have something 
 close) -- there is a contributed application which does much of what you are 
 looking for, although it is not as complete as the sunview program toolplaces. 
 look for the application "xplaces" on an archive-server near you. there are 
 several versions of this program floating around; look for a recent vintage.
 [10/90]
 	some new pseudo session-managers such as hp's vuewm provide for the 
 saving of sessions including information on the geometry of currently-running
 applications and the resource database. 
 [bjxrn stabell (bjoerns@staff.cs.uit.no); 3/93.]
  
 ----------------------------------------------------------------------
 subject:  21)  how do i use another window manager with dec's session manager?
 
 	dec's session manager will start dxwm up by default. to override this, 
 add to your .xdefaults file something like this line, naming the full pathname:
 	sm.windowmanagername:   /wherever/usr/bin/x11/your_favorite_wm
 
 ----------------------------------------------------------------------
 subject:  22)  how do i change the keyboard auto-repeat rate?
 
 	you can turn auto-repeat on or off by using "xset r on|off". the x
 protocol, however, doesn't provide for varying the auto-repeat rate, which is
 a capability not supported by all systems.
 	some servers running on systems that support this, however, may provide
 command-line flags to set the rate at start-up time. if you have control over 
 server start-up (see the man pages for xinit and xdm), you can invoke the 
 server with the chosen settings; for example, you can start the xsun server 
 from mit with the options "-ar1 350 -ar2 30" to reduce the sensitivity of the 
 keyboard.
 
 ----------------------------------------------------------------------
 subject:  23)  how do i remap the keys on my keyboard to produce a string?
 
 	there is no method of arranging for a particular string to be
 produced when you press a particular key. the xmodmap client, which is useful 
 for moving your ctrl and esc keys to useful places, just rearranges keys and 
 does not do "macro expansion."
 	some (few) clients, including xterm and several x-based editors, 
 accept a translation resource such as:
 	xterm*vt100.translations: #override \
 		<key>f1: string("setenv display unix:0")
 which permits the shorthand f1 to be pressed to reset the display locally
 within an xterm; it takes effect for new xterm clients. to include control
 characters in the string, use \nnn, where nnn is the octal encoding of the
 control character you want to include.
 	window managers, which could provide this facility, do not yet; nor
 has a special "remapper" client been made available.
 
 ----------------------------------------------------------------------
 
 david b. lewis 					faq%craft@uunet.uu.net
 
 		"just the faqs, ma'am." -- joe friday 
 -- 
 david b. lewis		temporarily at but not speaking for visual, inc.
 day: dbl@visual.com	evening: david%craft@uunet.uu.net
 