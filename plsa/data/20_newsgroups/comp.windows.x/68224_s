
 
 > 
 > i understood that there are two methods to connect application code
 to widgets:
 > 
 >                        callbacks and actions
 > 
 > the problem i face now is that i have a quite long piece of
 application code
 > that performs a lot of drawing into a window. i want to connect this
 to a
 > widget. no problem so far. i could use a callback function or an
 action to do this, processing any events afterwards.
 > 
 > but because the drawing takes some while, i want the application code
 sequence
 > to be able to be interrupted by events. then i want to handle the
 events
 > and resume with processing the application code at the point it was
 > interrupted.
 > it seems to me that this isn't possible, but how can i give the user
 the
 > impression that his inputs are immediately processed ?
  
 use a workproc.  see xtappaddworkproc(3xt).
 
 you should split your drawing routnie up into small chunks (this
 is the hard part).  then, in the callback that starts the drawing,
 you call xtappaddworkproc() to call your workproc the first time. 
 your workproc should be a function that returns a boolean...
 true when you are finished, and false when you want to keep
 processing.  if you return false, the workproc is automatically
 re-installed.  
 
 note that this method is better that using a time-out loop, since
 events get processed in a more precedence-oriented manner.  if you
 are using the same ada bindings i am, however, you are hosed, and
 should look into xtappaddtimeout(3xt).
 
 ----------
 joe hildebrand
 hildjj@fuentez.com
 software engineer
 fuentez systems concepts
 (703)273-1447
 
 standard disclaimers apply
 