
 in <1993may11.144231.24879@ims.com> tonyf@ims.com (antonio freixas) writes:
 
 >in article <1993may10.134631.14364@taylor.uucp>, mark@taylor.uucp (mark a. davis) writes:
 >> 
 >> *oh boy* have i wanted this too.  however, i believe that the cursor will
 >> be under the server's control (could be wrong)?  on an xterminal, for
 >> example, if the server was not the one controlling the cursor, then trying
 >> to get the xterm application to do the blinking would cause needless and
 >> yucky network overhead (consistantly).
 >> 
 
 
 >most people who write cursor blinking code just implement the simple case: a
 >straight 500msec (or so) on/off cycle.  however, the cursor will work much
 >better if cursor blinking is suppressed (i.e. the cursor is made visible) any
 >time the cursor moves and for .5 to 1 sec thereafter.  if you don't do this, the
 >cursor will be hard to track when in motion.
 
 you allways could port and use emu from export.lcs.mit.edu:contrib/emu.tar.z.
 we've implemented a blinking text cursor for the very reasons people mentioned.
 you can even configure the actual size of the text cursor (horizontal / ver-
 tical line cursors, smaller block cursors), turn on and off blinking,
 set the blink rate and so on. you even get blinking text - ok, enough
 advertising.
 
 i haven't looked at the xterm code in this respect, but from the memories
 i have when we had to decide whether to start with xterm and make it do
 what we wanted (mostly the blinking text), i'd say it won't be easy, since
 xterm is a hairy mess (understandable if you follow it's roots back to
 x10).
 
 the actual task to get the cursor to blink isn't that difficult if you
 provide the right hooks. as antonio mentioned, you'll have to show the
 cursor directly after it has moved, or people will become confused.
 since it's a good idea to take the cursor off the screen when you 
 do anything on screen anyways, this isn't very complicated. you'll just
 have to start the blink process with the cursor showing directly after
 it's mapped.
 
 as for the portability of emu and it's newest version. the one on export
 is still the same as on the r5 contrib tape. we wanted to get out a new
 release for over six months now, but unfortunately we're drowning in work.
 but since the changes aren't affectiong emu's behavior much, i'd say
 whoever wants to try emu shouldn't wait for a new version.
 
 as is, emu won't work on bsd derived systems (e.g. suns) with anything else 
 than a csh. there is a fix to this, which is very short (remove one line
 of code). i'll put this on export today.
 
 michael
 --
 michael elbel, digital-pcs gmbh, muenchen, germany - me@dude.pcs.com
 intelligenz is sowieso nur wat fuer doofe - mia
 fermentation fault (coors dumped)
 