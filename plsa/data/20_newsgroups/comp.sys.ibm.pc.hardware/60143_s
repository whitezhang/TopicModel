
 wlsmith@valve.heart.rri.uwo.ca (wayne smith) writes:
 >this doesn't answer the original question.  is os/2 a multi-user os?
 >and no mention was made of an ether card either.  but from a disk/data
 >point of view, why does scsi have an advantage when it comes to multi-
 >tasking?  data is data, and it could be anywhere on the drive.  can
 >scsi find it faster?  can it get it off the drive and into the computer
 >faster?  does it have a better cache system?  i thought scsi was good at
 >managing a data bus when multiple devices are attached.  if we are
 >only talking about a single drive, explain why scsi is inherently
 >faster at managing data from a hard drive.
 you are making the same mistake i did: you are confusing the drive
 interface to the data throughput interface.  again from my mac & ibm info
 sheet {available by ftp on sumex-aim.stanford.edu (36.44.0.6) in the
 info-mac/report as mac-ibm-compare173.txt}:
 expansion
 both mac & ibm
 scsi: only external device expansion interface common to both mac and ibm.
  allows the use of any device: hard drive, printer, scanner, nubus card 
  expansion {mac plus only}, some monitors, and cd-rom.  apple developed some 
  specifications for scsi controlers while ibm has no exact controller 
  specifications {which results in added incompatibilities on ibm machines}.  
  main problem:  there are a lot of external devices which are internal 
  terminated which causes problems for more then two devises off the scsi port 
  {a scsi chain is supposed to be terminated only at the begining and at the 
  end.  any other set up causes problems for either mac or ibm}. 
 scsi-1:  7 devices per scsi controller.  8-bit asynchronous {~1.5mb/s ave}
  and synchronous {5mb/s max} transfer base.  16-bit scsi-1 requires a
  scsi-2 controler chip and can provide only fast scsi-2 not wide scsi-2
  which are both 16-bit interfaces {see scsi-2}.
 scsi-2: 10 devices per scsi controller in scsi-2 mode.  scsi-2 is fully
  scsi-1 complient and tends to be implimented as a very fast scsi-1 since it 
  needs a different controller interface in both hardware {which tends to be 
  very expendsive} and software.  transfer speeds are 4-6mb/s with 10mb/s burst 
  {8-bit}, 8-12mb/s with 20mb/s burst {16-bit}, and 15-20mb/s with 40mb/s burst
  {32-bit/wide and fast}.  scsi-2 in scsi-1 mode is limited to 7 devices and
  reduced 8-bit or 16-bit {fast only} throughput due to the difference between
  scsi-1 and wide scsi-2 ports.
 
 ibm
 hd interfaces {limited to hard drives by design or lack of development}:
 [...]
 ide:  integrated device electronics 
  currently the most common standard, and is mainly used for medium sized 
  drives. can have more than one hard drive. asynchronous transfer: ~5mb/s max.
 
 so at its lowest setting scsi-2 interface in asynchronous scsi-1 mode averages 
 the through put maximum of ide in asynchronous mode.  in full scsi-2 mode
 it blows poor ide out the window, down the street, and into the garbage can.
 the problem becomes can the drive mechanisim keep up with those through put
 rates and that is where the bottleneck and cost of scsi-2 comes from.  not
 the interface itself but more and more from drive mechanisims to use the
 scsi-2 through put.  the cost of scsi interface is a self fulliling
 prophisy: few people buy scsi because it is so expencive for the pc, which
 in turn convices makes that mass producing scsi {which would reduce its
 cost} is unwarented, and so scsi is expencive. {that is the effect of the
 rule of scale: the more items sold the less each item has to bare the brunt
 the cost of manufacture and so the less each item has to cost}
 
 scsi-2 allows a drive mechanisims through put to be limited by the drive while
 ide itself limits the through put.
 