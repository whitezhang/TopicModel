
 the following document summarizes the clipper chip, how it is used,
 how programming of the chip is coupled to key generation and the
 escrow process, and how law enforcement decrypts communications.
 since there has been some speculation on this news group about my
 own involvement in this project, i'd like to add that i was not in
 any way involved.  i found out about it when the fbi briefed me on
 thursday evening, april 15.  since then i have spent considerable
 time talking with the nsa and fbi to learn more about this, and i
 attended the nist briefing at the department of commerce on april 16.  
 the document below is the result of that effort. 
 
 dorothy denning
 ---------------
 
                      the clipper chip: a technical summary
 
                                dorothy denning
 
                                 april 19, 1993
 
 
 introduction
 
 on april 16, the president announced a new initiative that will bring
 together the federal government and industry in a voluntary program
 to provide secure communications while meeting the legitimate needs of
 law enforcement.  at the heart of the plan is a new tamper-proof encryption
 chip called the "clipper chip" together with a split-key approach to
 escrowing keys.  two escrow agencies are used, and the key parts from
 both are needed to reconstruct a key.
 
 
 chip structure
 
 the clipper chip contains a classified 64-bit block encryption
 algorithm called "skipjack."  the algorithm uses 80 bit keys (compared
 with 56 for the des) and has 32 rounds of scrambling (compared with 16
 for the des).  it supports all 4 des modes of operation.  throughput is
 16 mbits a second.
 
 each chip includes the following components:
 
    the skipjack encryption algorithm
    f, an 80-bit family key that is common to all chips
    n, a 30-bit serial number
    u, an 80-bit secret key that unlocks all messages encrypted with the chip
 
 
 encrypting with the chip
 
 to see how the chip is used, imagine that it is embedded in the at&t
 telephone security device (as it will be).  suppose i call someone and
 we both have such a device.  after pushing a button to start a secure
 conversation, my security device will negotiate a session key k with
 the device at the other end (in general, any method of key exchange can
 be used).  the key k and message stream m (i.e., digitized voice) are then
 fed into the clipper chip to produce two values:
 
    e[m; k], the encrypted message stream, and 
    e[e[k; u] + n; f], a law enforcement block.  
 
 the law enforcement block thus contains the session key k encrypted
 under the unit key u concatenated with the serial number n, all
 encrypted under the family key f.
 
 
 chip programming and escrow
 
 all clipper chips are programmed inside a scif (secure computer
 information facility), which is essentially a vault.  the scif contains
 a laptop computer and equipment to program the chips.  about 300 chips
 are programmed during a single session.  the scif is located at
 mikotronx.
 
 at the beginning of a session, a trusted agent from each of the two key
 escrow agencies enters the vault.  agent 1 enters an 80-bit value s1
 into the laptop and agent 2 enters an 80-bit value s2. these values
 serve as seeds to generate keys for a sequence of serial numbers.
 
 to generate the unit key for a serial number n, the 30-bit value n is
 first padded with a fixed 34-bit block to produce a 64-bit block n1.
 s1 and s2 are then used as keys to triple-encrypt n1, producing a
 64-bit block r1:
 
         r1 = e[d[e[n1; s1]; s2]; s1] .
 
 similarly, n is padded with two other 34-bit blocks to produce n2 and
 n3, and two additional 64-bit blocks r2 and r3 are computed:  
 
         r2 = e[d[e[n2; s1]; s2]; s1] 
         r3 = e[d[e[n3; s1]; s2]; s1] .
 
 r1, r2, and r3 are then concatenated together, giving 192 bits. the
 first 80 bits are assigned to u1 and the second 80 bits to u2.  the
 rest are discarded.  the unit key u is the xor of u1 and u2.  u1 and u2
 are the key parts that are separately escrowed with the two escrow
 agencies.
 
 as a sequence of values for u1, u2, and u are generated, they are
 written onto three separate floppy disks.  the first disk contains a
 file for each serial number that contains the corresponding key part
 u1.  the second disk is similar but contains the u2 values.  the third
 disk contains the unit keys u.  agent 1 takes the first disk and agent
 2 takes the second disk.  the third disk is used to program the chips.
 after the chips are programmed, all information is discarded from the
 vault and the agents leave.  the laptop may be destroyed for additional
 assurance that no information is left behind.
  
 the protocol may be changed slightly so that four people are in the
 room instead of two.  the first two would provide the seeds s1 and s2,
 and the second two (the escrow agents) would take the disks back to
 the escrow agencies.
 
 the escrow agencies have as yet to be determined, but they will not
 be the nsa, cia, fbi, or any other law enforcement agency.  one or
 both may be independent from the government.
 
 
 law enforcement use
 
 when law enforcement has been authorized to tap an encrypted line, they
 will first take the warrant to the service provider in order to get
 access to the communications line.  let us assume that the tap is in
 place and that they have determined that the line is encrypted with
 clipper.  they will first decrypt the law enforcement block with the
 family key f.  this gives them e[k; u] + n.  they will then take a
 warrant identifying the chip serial number n to each of the key escrow
 agents and get back u1 and u2.  u1 and u2 are xored together to produce
 the unit key u, and e[k; u] is decrypted to get the session key k.
 finally the message stream is decrypted.  all this will be accomplished
 through a special black box decoder operated by the fbi.
 
 
 acknowledgment and distribution notice.  all information is based on
 information provided by nsa, nist, and the fbi.  permission to
 distribute this document is granted.
 
 
     
 