
 hi,
 
 i'd like to thank you all for the fast responses. 
 special thanks go to those who replied (lexical order):
 
 marcus j ranum <mjr@tis.com>
 paul crowley <pdc@dcs.ed.ac.uk>
 pausch@saaf.se (paul schlyter)
 tarnold@vnet.ibm.com (todd w. arnold)
 wcs@anchor.ho.att.com (bill stewart) 
 
 my question was:
 
 >how sensible is des encrypted data towards bit errors? how much data per
 >bit will be lost in average (i assume you still have the correct key)?
 
 how much of the des-encrypted data is affected depends on the used
 encryption mode. according to marcus j ranum (mjr@tis.com) there is:
 
 |	cfb = cipher feedback mode
 |	ecb = electronic code book mode
 |	cbc = cipher block chaining mode
 |	ofb = output feedback mode
 |
 |	each mode does some stuff better than others. ofb and cfb are designed
 |for communications streams more than for files.
 
 unfortunally, people strongly disagree which mode will lead to destruction
 of all of the following data. sure seems that some modes will resync quite
 fast, others will never, others will even only effect the very block.
 
 summarized, people said concerning *this* matter:
 
 /
 |in cbc mode, only the current block will be affected (tarnold@vnet.ibm.com 
 |<todd w. arnold>).
 |
 |if you use cbc (cihper block chaining), then the remainder of the data
 |will be destroyed as well. (pausch@saaf.se <paul schlyter>)
 |
 |in cfb mode, des synchronizes quite fast (probably within 1 block 
 |according to maracus j ranum <mjr@tis.com>).
 \
 
 maybe someone *definitely* knows what happens in which mode?
 
 nevertheless, thank you all very much again.
 
 axel dunkel
 
 --------------------------------------------------------------------
 
 i include the responses i got:
 
 from: tarnold@vnet.ibm.com (todd w. arnold)
 
 in <ad.735831059@cat> axel dunkel writes:
 >how sensible is des encrypted data towards bit errors? how much data per
 >bit will be lost in average (i assume you still have the correct key)?
 
 it depends on the mode you're using.  for a single 64-bit input block, a
 one-bit error will have a 50 percent chance of corrupting each of the 64
 output bits - in other words, it essentially turns the output block into
 a random number.  if you're encrypting data in cbc mode, however, only the
 one 64-bit block will be affected.  the next block, and all that follow it
 will be decrypted properly.
 
 it's a good idea to have some kind of error correction in your system if
 corrupted bits are likely.
 
    - todd
 
 --------------------------------------------------------------------
 
 from: pausch@saaf.se (paul schlyter)
 
 in article <ad.735831059@cat> you write:
 >hello,
 >
 >how sensible is des encrypted data towards bit errors? how much data per
 >bit will be lost in average (i assume you still have the correct key)?
 
 at least 8 bytes of data will be destroyed if one bit encrypted data is
 in error.
 
 if you use cbc (cihper block chaining), then the remainder of the data
 will be destroyed as well.
 
 des is very seisitive for single bit errors.  this is as it should be.
 
 -- 
 ---
 paul schlyter, swedish amateur astronomer's society (saaf)
 nybrogatan 75 a, 6 tr,  s-114 40 stockholm,  sweden
 internet:  pausch@saaf.se
 
 --------------------------------------------------------------------
 
 from: paul crowley <pdc@dcs.ed.ac.uk>
 
 > how sensible is des encrypted data towards bit errors? how much data per
 > bit will be lost in average (i assume you still have the correct key)?
 
 probably very bad; you might lose the rest of the data stream.  if you
 want safety against dropped bits use an error correcting coder like the
 freeware gnu ecc.
   __                                  _____
 \/ o\ paul crowley   pdc@dcs.ed.ac.uk \\ //
 /\__/ trust me. i know what i'm doing. \x/  fold a fish for jesus!
 
 --------------------------------------------------------------------
 
 from: wcs@anchor.ho.att.com
 
    how sensible is des encrypted data towards bit errors? how much data per
    bit will be lost in average (i assume you still have the correct key)?
 
 it depends on the mode you're using des in.
 electronic code book (ecb) takes a block of 64 input bits
 and produces 64 output bits, so if any bits are changed,
 the entire block of 64 bits becomes bad.
 i forget which feedback mode is which.
 in all of them, the results of encrypting one block affect later blocks.
 with some modes, the system self-synchronizes, so errors are repaired
 in a few blocks.  with other modes, once one block is bad,
 all later blocks will be bad too.
 
 there's also the framing problem.  if you have a bit change,
 the block that it's in changes, and maybe later blocks also change.
 but if you have bits lost or bits added (64 bits in, 63 or 65 bits out),
 everything is confused after that.
 
 --------------------------------------------------------------------
 
 from: marcus j ranum <mjr@tis.com>
 
 	depends on the mode you're using. cfb, for example, synchronises
 pretty fast. figure a bit error will destroy the current block and the
 next one.
 
 mjr.
 
 --------------------------------------------------------------------
 
 ---
 experience is what you get if you don't get what you want...
 
 systemberatung axel dunkel, koenigsberger strasse 41, d 6239 kriftel, germany
 e-mail: ad@cat.de, voice: +49-6192-41360, fax: +49-6192-46949
 
 