
 thus said djb@silverton.berkeley.edu (d. j. bernstein):
 >short summary of what bellovin says hellman says the nsa says: there is
 >a global key g, plus one key u_c for each chip c. the user can choose a
 >new session key k_p for each phone call p he makes. chip c knows three
 >keys: g, its own u_c, and the user's k_p. the government as a whole
 >knows g and every u_c. apparently a message m is encrypted as
 >e_g(e_{u_c}(k_p),c) , e_{k_p}(m). that's it.
 >
 >the system as described here can't possibly work. what happens when
 >someone plugs the above ciphertext into a receiving chip? to get m
 >the receiving chip needs k_p; to get k_p the receiving chip needs u_c.
 >the only information it can work with is c. if u_c can be computed
 >from c then the system is cryptographically useless and the ``key
 >escrow'' is bullshit. otherwise how is a message decrypted?
 
 given the description of the algorithm given, the only plausible
 explantion i can find is that k_p must be agreed to out of bandwidth
 in advance by the two parties; i.e. it's a standard shared symmetric
 key.
 --
 marc vanheyningen   mvanheyn@cs.indiana.edu   mime & ripem accepted
 security through diversion: n. theory which states that the public
 availability of good computer games is vital to maintaining system
 safety.  contrast security through obscurity.
 