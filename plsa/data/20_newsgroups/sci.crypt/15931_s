
 in article <930424031634.176183@dockmaster.ncsc.mil>, grant@dockmaster.ncsc.mil (lynn r grant) writes:
 > about 50 people so far have asked, "once the fbi gets your clipper keys,
 > won't they be able to read all your future and past traffic?"
 > 
 > there has been no response from nist, nsa, ms. denning, mr. hellman, or
 > anyone else who might be able to give us an authoritative answer.
 > this is troubling.
 > 
 > didn't nsa think about this?  or is it a feature, and they thought we
 > wouldn't notice?
 > 
 > i would have thought that by now they would have responded with something
 > of the form, "well, that won't be a problem because ...."
 
 don alvarez posted a good partial solution to this problem to
 comp.risks.  i'll present my variant on it instead, since i feel it's a
 bit stronger against some likely attempts to cheat.  depends on the
 protocol that's followed for reading traffic.  briefly, the cops get a
 wiretap warrant, and record the call.  they then notice the encryption
 and the disclosure header.  it, along with a copy of their warrant, is
 sent to the fbi, or whoever it is who holds the family key.  the
 f-holder decrypts the header, and sends the serial number n and the
 encrypted session key u[k] to the escrow agents.  they, in turn, use u1
 and u2 to recover k, and send that to the local police.
 
 note how this solves the problem of wiretapping forever.  neither the
 cops nor the fbi ever see u, so they can't read other traffic.  every
 request must be validated by both the fbi and the escrow agents.  the
 cops and the fbi together can't cheat, since they don't have u.  (i
 regard that as a likely pairing of folks who might try to beat the
 system.  it's to prevent this that i modified alvarez's scheme.)  the
 escrow agents can't read the conversation, since they don't have it;
 all they have is n and u[k].  and the police don't even see n.
 
 it's harder to see how to block decryption of old, warrantless,
 wiretaps.  there is one protection -- you have to persuade the escrow
 agents that the call is current.  but that's not nearly as strong.
 there are approaches i can see that might work, involving sequences of
 data on an unalterable medium, complete with cryptographic protection
 against insertion onto a new medium.  but i don't have anything yet
 that isn't too complex for comfort, or too hard to install in the real
 world.  the nsa might have an answer; they may or may not be smarter
 than me, but i've been working on this for a week, and they've had years.
 