
 in article <1667.apr1821.58.3593@silverton.berkeley.edu>, djb@silverton.berkeley.edu (d. j. bernstein) writes:
 > short summary of what bellovin says hellman says the nsa says: there is
 > a global key g, plus one key u_c for each chip c. the user can choose a
 > new session key k_p for each phone call p he makes. chip c knows three
 > keys: g, its own u_c, and the user's k_p. the government as a whole
 > knows g and every u_c. apparently a message m is encrypted as
 > e_g(e_{u_c}(k_p),c) , e_{k_p}(m). that's it.
 > 
 > the system as described here can't possibly work. what happens when
 > someone plugs the above ciphertext into a receiving chip? to get m
 > the receiving chip needs k_p; to get k_p the receiving chip needs u_c.
 > the only information it can work with is c. if u_c can be computed
 > from c then the system is cryptographically useless and the ``key
 > escrow'' is bullshit. otherwise how is a message decrypted?
 
 via k_p, of course.  nothing was said about where k_p comes from.  it's
 the session key, though, and it's chosen however you usually choose
 session keys --- exponential key exchange, shared secret, rsa, etc.
 but however you choose it, the chip will apparently emit the escrow
 header when you do.
 