
 >	encrypted under k, then k will be encrypted under the unit key uk, 
 >	and the serial number of the unit added to produce a three part 
 >	message which will then be encrypted under the system key sk 
 >	producing
 >
 >	     e{ e[m; k], e[k; uk], serial number;  sk}
 >
 >my understanding is that e[m; k] is not encrypted under sk (called the
 >"family key") and that the decrypt key corresponding to sk is held by
 >law enforcement.  does anyone have first hand knowledge on this?  i
 >will also check it out, but this is 7am sunday so i did not want to wait.
 
 ok, so there are in fact two distinct components transmitted by the
 chip; the real message encrypted with the "conventional" key, and the
 serial number and encrypted "conventional" key encrypted with the
 (imho kind of bogus, as the whole concept of "one key that millions of
 people use which can't be changed" doesn't seem reasonable) "family
 key".
 
 suppose i analyze the output of this chip and i'm able to determine
 which bits are the encrypted packet which contains the serial number
 and session key.  suppose i also design a simple algorithm based on
 this information which takes the data containing the encrypted session
 key and twiddles a bit (or several) before it's sent down the line.
 
 mind you, i'm sure the nsa thought of this along with a dozen other
 attacks i can't imagine, and the system is probably somehow designed
 so that manipulation of this information will cause a compliant
 receiving chip to somehow fail to decrypt successfully.  but how?
 what if the two parties agree in advance on some kind of consistent
 bit-twiddling scheme, so the decryption chip sees the restored
 "proper" bitstream but an eavesdropper gets a e[k; uk] packet that's
 wrong?
 
 i suppose this could be easily defeated if the chip "sends" that
 information out many times in slightly different ways, making it
 effectively impossible to be certain you know all the information
 being sent.
 --
 marc vanheyningen   mvanheyn@cs.indiana.edu   mime & ripem accepted
 if your theory predicts different outcomes depending on whether you use
 discrete mathematics or continuous mathematics, then you've got the wrong
 theory.		- bruce maclennan
 