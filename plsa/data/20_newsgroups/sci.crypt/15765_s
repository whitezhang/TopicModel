	<1993apr21.001230.26384@lokkur.dexter.mi.us>
 	<c5uvn4.mf7@austin.ibm.com> <strnlghtc5wcmo.fx5@netcom.com>
 nntp-posting-host: lole.nmsu.edu
 in-reply-to: strnlght@netcom.com's message of thu, 22 apr 1993 17:59:12 gmt
 
 
 in article <strnlghtc5wcmo.fx5@netcom.com> strnlght@netcom.com (david
 sternlight) writes:
 
    >at the company i worked for previously, i received a file that was
    >des encryped and the person that had sent it, went on vaction.
    >rather than wait two weeks i set up a straight frontal attack with
    >one key at a time.  it only took two(2) days to crack the file.
    >no, i don't have any faith in des.
    
 
    taking this at face value (though it seems quite dissonant with
    much else that has been published here about brute force des
    cracking, unless russell was lucky with respect to the key), i'd be
    very interested in whether the program russell used is available?
 
 key search is very practical in many real situations since people use
 such stupid keys on the average.  password crackers know this well.
 
    depending on his answer, this could be an appalling development
    calling into question both des and rsa/des.
 
 not really.  in fact, public key based communication systems very
 often pick keys automatically which are much better than passwords or
 pass phrases.
 
    if any bright programmer with a little idle machine time can crack
    a single des message in a couple of days (assuming no tricks that
    are message-specific),
 
 if a person picked the password or pass phrase, then the key search is
 pretty straightforward.  in running english text, the average content
 of a single word is about 8 bits.  in pass phrases, this may increase
 to 10 bits or so.  searching 30bit spaces is semi-practical even in
 software and searching 40bit spaces isn't outrageous to imagine with
 hardware assists of moderate size.
 