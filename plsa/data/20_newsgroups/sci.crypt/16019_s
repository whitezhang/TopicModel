
 
 >>>>> in article <1r60ue$102@access.digex.net>,
 >>>>> steve-b@access.digex.com (steve brinich) writes:
 
  > second question: why!?!? why is such a strange procedure used, and
  >not a real rng ? this turns those s1,s2 in a kind of bottleneck for
  >system- security.
 
 	>> the only theory that makes any sense is that s1 and s2 are
 	>> either the same for all chips, or vary among very few
 	>> possibilities, so that anyone trying to break the encryption
 	>> by brute force need only plow through the possible serial
 	>> numbers (2^30, about one billion), multiplied by the number
 	>> of different s1, s2 combinations.
 
 
 suppose instead that s1 and s2 can be reconstructed given 3 or 4 of the
 unit keys generated in a single batch (through some sort of known
 plaintext attack, say).  suppose further that 3 or 4 of the chips
 programmed in each session never find their way into commercial
 products, but instead end up "elsewhere".
 
 suppose the folks at "elsewhere" can determine a unit key, given
 physical access to one of these chips.  then those same folks can
 determine s1 and s2 for the whole batch...
 
 too many suppositions?  yeah, probably.
 
 - pat
 
 
 
 