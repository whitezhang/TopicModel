
 i'd *desparately* prefer it if we didn't rehash the same arguments
 that went on ad infinitum last time.  that's especially true for
 sci.crypt.  for that matter, i've created alt.privacy.clipper, since
 the traffic is appearing in *many* different groups right now.
 
 i'm going to focus here on some technical aspects of the plan, hence my
 followup to sci.crypt.  frankly, if you're not an absolutist, your
 feelings may turn on some of these issues.  for example -- with an
 80-bit key, simply splitting it into two 40-bit pieces is much less
 acceptable than other schemes, because it means that if just one
 repository is, shall we say, overly pliable, a would-be eavesdropper
 would need to recover just 40 more bits of key.  i need not point out
 in this newsgroup that that's pretty easy to do by exhaustive search.
 a slightly more complex scheme -- xor-ing the key with a random number,
 and then with its complement -- would produce two 80-bit subkeys,
 neither of which is useful alone.  that variant is much more resistant
 to attack.  clearly, one can get even more sophisticated, to protect
 the subkeys even more.
 
 other thoughts...  some people have noted the size and complexity of
 the databases necessary.  but the id strings the phones emit could be
 their back door key, double-encrypted with the escrow repositories'
 public keys.  for that matter, they could do that only with session
 keys, and have no back door at all.  in that case, the fbi would have
 to bring every intercept to the repositories to be decrypted.  this
 would answer many of the objections along the lines of ``how do you
 make sure they stop''.
 
 we can even combine that with a variant of the digital telephony back
 door -- have the switch do the tap, but with a digitally-signed record
 of the time, phone number, etc, of the call.  that provides proof to
 the escrow agents that the tap was done in compliance with the terms of
 the warrant.
 
 i can suggest other variations, too.  suppose each clipper chip had 100
 public key pairs.  each would be used ~10 times, after which you'd need
 more keying material.  (not a bad idea in any event.)  this could be
 used to enforce time limits, or rather, usage limits, on each warrant;
 the keys the repository agents would deliver wouldn't last for very
 long.
 
 i suspect that the cryptographic algorithm itself is secure.  apart from
 the obvious -- why push a weak algorithm when you've already got the
 back door? -- i think that the government is still genuinely concerned
 about foreign espionage, especially aimed at commercial targets.  this
 scheme lets the spooks have their cake and eat it, too.  (i've heard
 rumors, over the years, that some factions within nsa were unhappy with
 des because it was too good.  not that they couldn't crack it, but it
 was much too expensive to do so as easily as they'd want.)  they're keeping
 the details secret so that others don't build their own implementations
 without the back door.
 
 the cryptographic protocol, though, is another matter.  i see no valid
 reasons for keeping it secret, and -- as i hope i've shown above -- there
 are a lot of ways to do things that aren't (quite) as bad.
 