
 douce@tfsquad.mn.org (andrew geweke) writes:
 >        i cannot speak for dale. but i am quite sure that the macintosh 
 >uses the full 16-bit or 32-bit data path to its full advantage. that is, 
 >it is running as fast with two or four 30-pin simms as it would with one 
 >72-pin simm. now, it may be that longword accesses (assuming a 32-bit 
 >data path here) get the first byte from the first simm, the second byte 
 >from the second, and so on. this would mean that each longword of memory 
 >is actually split among four simms, one for each byte. on the other hand, 
 >it could be that the simms are interleaved by word or longword (not just 
 >by byte), or they could be successive in memory, and the memory 
 >controller deals with the eight-bit data path that each one has. i 
 >suspect, though, that they are interleaved to some extent so that 32 bits 
 >can be read or written at once. this would indicate a byte-level 
 >interleave.
 >        i am not confusing this with the new machines' longword 
 >interleave with two 72-pin simms of the same sort, although that seems to 
 >be the same sort of idea. there, you get an essential 64-bit data path ro 
 >(excuse me, to) ram instead of just a 32-bit one. yes, the cpu can't 
 >handle it, but when writing to successive addresses it speeds something 
 >up.
 >        so, dale, am i right? 30-pin simms are interleaved by bytes, 
 >allowing the full data bus? or, as is common with usenet and me in 
 >particular, am i as clueless as everyone else?
 
 what conclusion can be drawn from this?  i'm trying to figure out what kind
 of memory configuration for the lc iii (32-bit datapath) would be fastest.  any
 ideas?
 
 thanks,
 jason macdonald
 --
 - jason scott macdonald -      jsm1@cornell.edu - jsm1@crux3.cit.cornell.edu
 "technology sufficiently advanced is        ____
  indistinguishable from magic."             \  /      "cats exist so that we
                  -- arthur c. clarke         \/        may caress the lion."
 