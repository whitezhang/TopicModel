
 in article <1993apr21.081317.599@das.harvard.edu> squish@endor.uucp (shishin yamada) writes:
 >the atari 2600 used a 6502 cpu, just like their entire 8-bit line
 >(400, 800,1200,1400, 1440, 130xe, 65xe computers, as well as the 5200
 >game machine). 
 
 wrong, it has a 6507.
 
 >the 2600 had some extra asic chips that were basically
 >modified graphics chips and pia's for the joysticks. 
 
 it had one custome chip (not an asic in the sense that word is now understood):
 the tia (sometimes known as the 6526, although most other manufacturers list
 that as the cia complex interface adapter.)  tia stands for television
 interface adapter, and it handles sound, paddles and the minimal video hardware
 the 2600 possessed.
 
 there was also a standard 6532 ram, i/o, timer (riot), plus a voltage
 regulator and (if memory serves) a 555 timer.  that's all.
 
 >later model 2600
 >might have incorporated many of the chips into one asci, as the weight
 >of the machines and part count decreased a lot over the years.
 
 not according to the servicing documentation i have here.  the 2600 did not
 change intenally very much at all.
 
 >additionally, i think the 2600 used 2k, 4k, and up to 8k of rom for
 >their games. 
 
 roms were mapped into the upper 4k of the 6507's address space.  2k and 4k
 games were fine, but later 8k and 16k games needed bank switching.  atari
 (and others) made much of these "huge" cartridges.
 
 >i have no idea how much ram it had to work with, but i
 >would hazard a guess of 2 or 4k ram. 
 
 wrong, it had 128 bytes of ram from the riot.  this was multiply mapped into
 both page 0 (pseudo-registers) and page 1 (stack), and also throughout the
 bottom 4k of memory.  tia registers also sat in this address space.
 
 as 128 bytes of ram was somewhat limiting, some later cartridges also carried
 ram themselves, which was interesting as atari had provided no write line
 to the cart.  this was managed by mapping the reads from ram into one address
 range, and the writes into another, but all the time this scheme ate into
 the *very* scarce rom address space.
 
 							ian.
 