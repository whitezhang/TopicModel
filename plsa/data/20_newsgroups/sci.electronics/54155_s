
 in article <3402@tau-ceti.isc-br.com>, jimc@tau-ceti.isc-br.com (jim
 cathey) wrote:
 > 
 > in article <alan-210493163447@17.129.12.26> alan@apple.com (alan mimms) writes:
 > >actually detecting a break is done by watching for a "character" containing
 > >all zero bits with the framing error resulting from its receipt.  this
 > 
 > true enough, but...
 > 
 > >means that the line stayed in the zero bit state even past the stop bit
 > >time slot, which basically indicates a break.  there is no special way to
 > >detect break that i have found other than this -- there's no magic signal
 > >generated by uarts, etc.
 > 
 > zilog scc:
 > ---------
 > 	rr0[7]:  break detect
 > 
 > this is a very popular part, but it has a number of quirks, especially
 > in hdlc mode.
 > 
 > signetics 68562 duscc:
 > ---------------------
 > 	rsr[2]:  break start detect
 > 	rsr[3]:  break end detect
 > 
 > two of the bits in the receiver status register.  you can enable an interrupt
 > on either of these bits going high, too.  also, only one null will be put
 > in the fifo per break detected.
 > 
 > this is simply the best serial chip i've ever worked with.  _many_ less
 > quirks than the scc, which is imho second-best.  (death to 8250 devices!)
 > 
 
 and i thought i knew a lot about serial devices.  perhaps i should just
 keep my big mouth shut.  sorry.
 
 alan mimms (alan@apple.com, ...!apple!alan)   | my opinions are generally
 portable macintosh software group             | pretty worthless, but
 apple computer                                | they *are* my own...
 art without engineering is dreaming.  engineering without art is
 calculating.
 	-- steven k. roberts in "computing across america"
 