
 in article <9304271755.aa23355@enet-gw.pa.dec.com> you write:
 >anyone who thinks that tiff is too complex hasn't dealt with
 >cgm, asn.1, cda, dca, sgml, or any one of a number of other
 >very successful file format.  people seem perfectly capable
 >dealing with these others.
 
 well, yeah, but unlike tiff they all do substantially more than encode
 rectangular bitmaps.  and the others are hardly trouble free.  i hear that
 it is quite common for cgm implementations not to interoperate.
 
 the annoying thing about tiff is that is that along with the 50 useful
 options, there are 100 stupid options.  the most egregious example is that
 rather than picking a byte order and bit order and using it consistently
 in all tiff files, byte and bit order are options and all tiff readers on
 all machines, no matter what their natural byte order, have to be prepared
 to do byte swapping.  there are four slightly different fax formats --
 again, any one of them would have been adequate.  rgb images can be stored
 by pixel or by component, complexity without function, etc, etc.  i also
 note that the tiff doc says that aldus' experiments show that lzw reliably
 compresses as well or better than any of the fax formats, suggesting that
 none of the fax formats are really useful.
 
 what's worse, a lot of the formats aren't even implemented very well,
 e.g., lzw limits code words to 12 bits, while 14 or 16 bits would have
 provided substantially better compression.  and the lzw method compresses
 bytes rather than pixels.
 
 but the absolute worst thing about tiff is that any vendor can register
 proprietary tiff codes and formats without even publicly documenting them.
 this means that there is no way to write a tiff reader that can reliably
 read all incoming tiff files.  some standard.
 
 regards,
 john levine, johnl@iecc.cambridge.ma.us, {spdcc|ima|world}!iecc!johnl
 