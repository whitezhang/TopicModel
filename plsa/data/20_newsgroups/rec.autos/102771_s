
 archive-name: rec-autos/part6
 
 [new article as of 4 february 1993 -- rpw]
 
 
 many people want to set up mailing lists for their favorite
 automotive topics; rather fewer know how to do it.  this article
 will provide the essential information for doing so on standard
 unix systems.  a shell script and examples of alias file setups
 are included which presently run on a sparc 2 here at balltown.cma.com
 for a number of mailing lists.  note that if you do set up an automotive
 mailing list, please let me know of the -request address so that i can
 list it in the montly rec.autos posting.  also inform the keeper of the
 usenet list-of-lists (check news.answers for this monthly posting.)
 
 first of all, to get anywhere, you need to either 1) be a sysadmin,
 or 2) have some measure of assistance from your sysadmin.  it is also
 important that you have reasonably good network connectivity; if it seems
 like you get everything several days after anyone else, or that you
 have trouble getting email through, then your network connectivity is
 probably not good enough.
 
 listserv:
 
 there is a handy automated mailing list package named listserv, which
 is available from several ftp servers on the network.  details of
 the installation and operation of listserv are beyond the scope of this
 article, but anyone who is considering running a large mailing list should
 probably  look at listserv carefully.
 
 the alias file:
 
 on a typical unix system; there is a file named /usr/lib/aliases on
 whichever file server is your mail host; it contains lines such as:
 
 foo:   bar, baz, bletch
 
 
 which means that any email sent the name `foo' on that host is
 redistributed to users bar, baz, and bletch.  thus, the simplest
 possible email list is 
 
 my-favorite-car:  member1, member2, member3, my-address
 my-favorite-car-request: my-address
 
 this has a couple of problems; the most noticeable one being that
 you have to be superuser to edit the alias file.  however, you can
 do the following, with the connivance of your sysadmin:
 
 my-favorite-car: :include:/home/mydir/misc/autos/my-favorite-car-list
 my-favorite-car-request: my-address
 
 where the file specified is a list of comma and newline separated
 addresses.  this file can be in the list admin's home directory,
 owned by the list admin.
 
 bounced mail:
 
 this still has a problem; bounced mail usually gets distributed to all the
 members of the list, which is generally considered somewhat irritating.
 therefore, the way that the driving school mailing list is set up
 is instructive (thanks to harpal chohan of the bmw list for this setup,
 by the way.  i'm not sure where he got it from.)
 
 
 school-request:   welty
 school-rebroadcast:  :include:/home/newwelty/misc/autos/school/list
 school: "|/usr/local/adm/bin/explscript school"
 owner-school: school-request
 owner-school-out: school-request
 
 
 here's what is going on here:
 
 the owner- and -request addresses are intended as traps for bounced mail
 coming from the network.  the -request address also serves as the point
 of contact for administrative duties.
 
 school is what people send mail to; instead of pointing at addresses,
 it points at a shell script which rewrites headers before resending
 the email.  school-broadcast (of which nobody except me knows the name;
 the name has been changed here to protect my own sanity) points at the
 actual list members.
 
 the shell script i use is as follows:
 
 -----------------
 #!/bin/sh
 cd /tmp
 sed -e '/^reply-to:/d' -e '/^sender:/d' -e '/^from /d' | \
         (echo reply-to: ${1}@balltown.cma.com; \
          echo errors-to: ${1}-request@balltown.cma.com; \
          echo sender: ${1}-request@balltown.cma.com; \
          cat -) | \
         /usr/lib/sendmail -om -f ${1}-request@balltown.cma.com \
                 -f "the ${1} mailing list" ${1}-rebroadcast
 exit 0
 -------------------
 
 note that this script does not know the name of the list; the name
 is passed in from outside, so that the script may be used for multiple
 lists (i run several out of this site.)
 the script excises reply-to:, sender:, and from lines from the incoming
 message, substitutes for sender: and reply-to:, and adds errors-to:
 99.9% of all email bounce messages end up being sent to the -request
 or owner- addresses if this header rewrite is done.
 
 for digested lists, there is some digestification software around.
 hopefully i'll be able to provide more information in a future version
 of this posting.
 
 richard welty (welty@balltown.cma.com)
 -- 
 richard welty        518-393-7228       welty@cabot.balltown.cma.com
 ``nothing good has ever been reported about the full rotation of
   a race car about either its pitch or roll axis''  -- carroll smith
 