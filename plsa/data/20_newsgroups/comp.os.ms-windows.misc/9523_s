
 kentiler@matt.ksu.ksu.edu (kent p. iler) writes:
 
 :   i have normal procomm plus for dos, but i've been considering buying
 : the windows version....it got really great reviews in computer shopper.
 : i have a friend who connects to the mainframe and unix machines here
 : using it, but the screen seems to have a problem keeping up with the
 : modem....he has a 14,400 modem on a 486 50 mhz machine.  i can't
 : see it having trouble keeping up.  his pcplus for dos works great,
 
 re: what to do after the high speed modem arrives.       edition 01 apr 93
 
 this article applies only to windows 3.0 and 3.1, and not to nt, os/2
 or dos apps not running under windows.
 
 one of the unadvertised limitations of most current windows pcs is that
 their rs-232c (serial, com) performance is seriously deficient.  almost
 everyone who purchases a high-speed modem (v.32bis, v.32, pep or hst)
 discovers the problem the first time they try to download a file or accept
 an incoming fax (at 9600+) after upgrading the modem.  overrun and retry
 errors abound, even when the only active application is the datacomm or
 fax program.  if the transfer completes at all, it may take even longer
 than with the old 2400bps modem.
 
 
 there are three reasons for the problem:
 
 1. the universal asynchronous receiver/transmitters (uarts) used in most
    pcs are primitive ns8250 devices with single-byte fifo buffers.  if the
    operating system/driver cannot read and flush each character at high
    interrupt rates, the next incoming character overwrites the fifo and
    the previous one is lost.  dos, being a fairly single-minded
    environment during datacomm, can usually keep up. windows can't.
 
 2. windows has more operating system overhead than plain dos, and
    interrupts often take longer to service.  overruns are much more likely
    than under dos.  as soon as you report to your pc/modem vendor that you
    are losing data, you may be advised that "you need to upgrade to a
    16550". more likely, since there seems to be a conspiracy of ignorance
    about this issue,  you'll get no useful advice at all.  most of the
    store-front and mail-order sources i spoke with in attempting to solve
    my own problem had never heard the term "16550" and many didn't even
    know what a uart was.
 
 3. even your pc has ns16550a uarts (and ps/2's do), or if you can upgrade
    your mother/com board or add a new com board, you may still experience
    errors and overruns because the standard microsoft windows com drivers
    don't take full advantage of the 16550.  windows 3.1 is improved in this
    regard over 3.0, but i still recommend a driver upgrade.  applications
    like procomm+/win (which is what i use) cannot get around this problem
    by themselves.
 
 if you have a modem card, you may not have a problem, as the modem part of
 the card can be designed to be aware of the state of the uart, and avoid
 overrunning it; however, i wouldn't want to bet that the card designers
 were that clever, and will insist on a 16550 uart if i ever buy a modem
 card.  some modem cards don't even have conventional uarts, but if they
 are to work with standard windows drivers, they need to simulate one.
 use msd.exe (below) to see what the modem card is, or is pretending to be.
 
 
 the hardware situation.
 
 the uarts on most pc com ports are based on national semiconductor ns8250
 or ns16450 chips (or megacells inside vlsi chips where you can't replace
 them).  you can id the uart type on your system by running the microsoft
 diagnostic program \windows\msd.exe.  be sure to run it in dos *before*
 bringing up windows.   the windows serial api may prevent msd from
 accurately identifying a 16550 if you run it from a windows dos prompt.
 
 the ns16550 uart has separate 16-byte transmit and receive fifos with
 configurable trigger levels, and can run reliably at clock rates up to
 460,800 bps, although with current modem technology, there's no point in
 pushing your luck by going over 115,200 bps. the 16550 has shorted access
 cycle times than the 16450 or 8250.  the 16550 also has dma capability, but
 it is not clear that any pc drivers ever use this.  for more technical info,
 see national semiconductor application note an-491.
 
 so, what uart component do you have?
 
 try to locate the uart on your mother board, multi-function i/o card, com
 board or isa/mca modem card.  if you can't find a socketed component with
 the numbers "8250" or "16450", your com ports are probably buried in vlsi,
 and you won't be able to perform a chip replacement.  if you can disable
 your vlsi com ports (as i chose to do), you can at least add an aftermarket
 com board.
 
 if you have one or more socketed 8250 or 16450 chips, you can buy plug-in
 ns16550afn or pc16c550cn (low power cmos version) ics from several
 suppliers typically for $9 to $15 each.  the "n" chip is the normal 40-pin
 dual-in-line package.  other styles are available, but avoid any ns16550
 chips without the "a" (the 16c550c are presumably all ok).
 
 early ns chips have bugs, although national will reportedly exchange those
 of their own manufacture for free.  clone chips are available from various
 ic makers other than national.  the manual for the turbocom drivers states
 support for the following (apparently equivalent) chips:
 national semiconductor: 16550a, 16551, 16552
 chips&technology:       82c607
 texas instruments:      t16c550a
 silicon systems:        73m550
 vlsi                    16c550
 turbocom warns about the pre-"a" ns16550 and western digital 16c550,
 says that problems have been reported with early ibm ps/2 55sx and 70
 systems (ibm reportedly will upgrade them).
 
 if you don't have socketed 8250/16450 chips, you'll need to buy an after-
 market com or multi-function board. if this is a modem card situation, you
 may be hosed. to add a new com or multi-function card, you'll need to
 either disable the com1/2 port(s) you are replacing, or re-assign them to
 com3/4 (although watch out for irq conflicts without turbocom).
 
 although cheaper cards are available, in the interest of getting the
 problem solved quickly i elected buy the modular circuit technology
 mct-aio+ card from:
 
 jdr microdevices
 2233 samaritan drive
 san jose  ca  95124
 (800) 538-5000 voice us
 (408) 559-1200 voice other
 (800) 538-5005 fax us
 
 the mct-aio+ (and the "+" is important) sells for $89.95.  it is an 8-bit
 isa card providing:
 
 port type  connector  address and irq        comments
 com        db9m       com 1,2,3 irq 2,3,4,5  ns16550afn in socket
 com        ribbon     com 2,3,4 irq 2,3,4,5  ns16550afn in socket
 parallel   db25f      lpt1,2,3  irq 5,7
 game       ribbon
 
 the kit includes a ribbon cable and db25f connector for the secondary com
 port, a ribbon cable/connector for the game port, two bulkhead plates for
 the ribbon-based connectors and a 9f-to-25f adaptor cable.  each port can
 be individually disabled, and the com ports have tx, rx, rts, cts, dtr,
 dcd, and dsr jumpers.
 
 jdr also sells a super-i/o m-f card that also has ide.
 
 i have heard from several people about less expensive m-f i/o cards
 with 16550s:
 
 tsd systems
 (407) 331-9130
 $19.95 for the card, plus $9.95 per 16550.
 
 greenfield trading and distributors
 (518) 271-2473 (voice), (518) 271-7811(fax).
 their card is $33 w/one 16550, $45 w/2, and they sell 16550afns for $13.
 
 r&s data systems, inc.
 820 east highway 434
 longwood, fl  32750
 phone: (407) 331-1424
 fax: (407) 331-8606
 2com/lpt/game card w/2 16550s for $39
 
 i have no personal experience with any of the firms except jdr.
 
 meanwhile, back at the mct card from jdr... i only needed two serial ports,
 and am running out of irqs on my pc, so i disabled my built-in vlsi-based
 8250 ports. however, with the turbocom driver (below), i could have set
 the internals as com3 and 4, using irq sharing.
 
 
 the software situation
 
 simply upgrading to 16550 uarts will not completely solve common overrun
 problems.  the standard ms serial drivers don't take full advantage of the
 16550. the windows 3.0 drivers are even less capable, and the windows 3.1
 drivers have the following limitations:
  - they enable only the receive fifo, and only at rates above 2400 bps.
  - they never enable the transmit fifo, which  results in an interrupt
    rate of 10x during uploads.
  - they set the trigger level at 14 bytes (too high - it's easy for 2
    more bytes to arrive before the driver can read the fifo).
  - the ports menu of the control panel only allows speeds up to 19200.
    with a v.32bis modem,  sparse data and text can easily compress 3:1
    or more, suggesting that a host dte connect rate of 57,600 bps would
    be effective.
  - the api won't accept rates above "cbr_128000".
  - the api won't let dos programs know there is a 16550 there, and even
    if it did, dos programs that aren't 16550-aware get little benefit
    from a 16550 port with the standard drivers.
  - they don't allow irq sharing for com3,4.
  - the bios doesn't initialize com3,4 properly in many systems.
  - windows provides no workaround for apps that don't provide port
    speed options above 19200 bps.
 
 these problems are reportedly not solved in windows nt or dos 6.0, and may
 or may not be addressed in any windows releases after 3.1 (but before 4.0).
 rumors suggest they "may" be solved in windows "4.0".
 
 you can get replacement drivers that solve all of those problems by buying
 a copy of "turbocom", current version 1.2, from:
 
 bio-engineering research
 pacific commware division
 180 beacon hill lane
 ashland  or   97520-9701
 (503) 482-2744 voice
 (503) 482-2627 fax
 (503) 482-2633 bbs
 mcimail:    344-5374
 compuserve: 71521,760
 
 price was around $50 as i recall.  bio-eng is not set up to accept credit
 cards, so i had to send a check.  egghead and 1-800-software list turbocom
 but as far as i know, they don't stock it.  bio is not a software company
 per se.  they apparently needed reliable hi-speed serial connections for
 an in-house instrument application, wrote their own driver, discovered a
 market for it, revised it to be a general purpose com driver suite. they
 recently upgraded it for windows 3.1.  it is run-time licensed.
 
 i now have my host (dte) connect rate set to 57,600 bps most of  my
 datacomm apps, and i am having zero problems with downloads. i routinely
 see transfer rates that exceed 2,000 bps. i am also using 115,200 bps
 when linking an hp95lx to my pc, with lossless bi-directional i/o.
 uploads to various remote systems are another matter, because many hosts
 are still using antique uarts and drivers.
 
 note that 19200 is still the highest rate that the windows 3.1 port menu
 in control panel will allow in configuring a com port.  turbocom gets
 around this by allowing you to specify, on each port, a factor that will
 set the real uart rate to a multiple of the rate passed through the
 windows apis and dialog boxes.
 
 i also have cts/rts hardware flow control enabled, and i suggest that you
 do the same.  even if you only ever transfer 7-bit ascii data, xon/xoff is
 not a sufficiently reliable method of flow control.  the informal (dec)
 standard for xon/xoff hysteresis is that the sender may transmit another
 16 (yes, sixteen) bytes after receipt of the xoff from the receiving
 system or device.  the 16 byte fifo in the 16550 is clearly not big enough
 to let us rely exclusively on xon/xoff.  a well-respected datacomm
 engineer has informed me that the 16550's can't really do cts/rts all
 by itself in the dos/windows environment, so using data rates above
 115,200 may still be risky.
 
 even with hardware flow control, a 16550 with turbocom can still
 experience overruns in very busy systems, with lots of apps running and
 serious swapping in progress. if this is your situation, you may need to
 buy a co-processed com board, but this will cost you more than a
 16550/turbocom upgrade.  a review of two such boards, and a review of
 turbocom, can be found in the feb'93 issue of "windows sources" magazine.
 i suggest trying a 16550/turbocom upgrade first, and experiment with
 process priorities and time slices if you are a "power user" whose
 thrashing system still runs into comm problems.
 
 
 closing soapbox comments
 
 the state of rs-232c serial datacomm support is an embarrassment across
 the computer industry.  because it is the oldest standard i/o interface,
 the job of designing hardware and writing software often seems to be
 assigned to the least senior or lowest ranked engineers at computer
 companies.  the design of the average serial port is at least ten years
 behind the state of the art. in my last job, with a major workstation
 vendor, i lobbied for improved serial ports when they were doing the
 initial designs of a new system.  that family of machines was
 subsequently introduced with 16550 ports.  however, this is the
 exception.  few computer companies seem to have any champions for decent
 i/o.
 
 you may as well learn what you can about serial i/o, because this
 situation shows no sign of improving soon.  when v.fast arrives, i expect
 cries of outrage from windows users world-wide whose 8250 pcs "sort of"
 work today with v.32, but will fail miserably with v.fast.  without a
 hardware-buffered uart (like the 16550) and without software drivers that
 use that uart to best advantage, a v.fast modem will be a waste of money.
 
 regards,                                          1001-a east harmony road
 bob niland                                        suite 503
 internet:  rjn@csn.org                            fort collins co 80525
 compuserve: 71044,2124                            (303) 223-5209
 
                      copyright 1993 robert j. niland
                            all rights reserved
 
   permission is granted for automatic redistribution of this article, via
   electronic, magnetic and optical media, in an unedited form, through any
   usenet newsgroup where the article is posted by the author.  permission
   is granted for each compuserve and usenet reader subscriber and each
   person who received this article from compuserve, an ftp site authorized
   by the author or via electronic mail from the author, to retain one
   electronic copy and to make hardcopy reproductions of this edition of
   this article for personal non-commercial use, provided that no material
   changes are made to the article or this copyright statement. all other
   copying, storage, reproduction or redistribution of this article, in
   any form, is prohibited without the express written consent of the
   author,  robert j. niland.
 
 eof
 