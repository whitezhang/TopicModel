
 (i have been having trouble posting this article from within tin for over
 a week. if you do get multiple copies, my apologies.)
 
 here is a challenge to microsoft or microsort supporters to defend the
 pathetic state of dos 6 as an upgrade distribution -- it is a long story
 but would make good reading for those who are interested in knowing the
 potential pitfalls of "upgrading" to dos 6 that i have been able to
 notice after only about a week of playing around with it.
 
 my envorinment
 ==============
 
 ti travelmate 4000 winsx (486sx/25) 4m ram 120m disk
 system bios version 1.03 05/21/92 by texas instruments
 cl-gd6420 vga bios v 1.03 a1 by cirrus logic & quadtel
 advance power manager battery.pro v b6.00 by texas instruments
 smart drive cache (win3.1/dos6) parameters: 2048 1024 a- b-
 windows benchmark winbench(tm) v 3.11 02/11/93 by zd labs
 
 after "updgrading" to dos 6, i could not understand why certain things
 became so slow, especially after i decided to try 'dblspace'.  in the
 process of finding out why, i discovered some interesting things.
 
 
 disk performance with double space and smart drive
 ==================================================
 
 while most things did not appear to slow down most of the time, certain
 applications appeared to run very much slower.  what was interesting is
 that commands like 'chkdsk' and 'defrag' were running far too slowly to
 consider them useful by any standards.  i suspected double space (ds)
 and decided to measure its impact on my system using winbench(tm).
 
 the real disk winmark of 20350 for the original system (as shipped from
 factory with dos 5 and windowws 3.1) became 10718 when "upgraded" to
 dos 6 with ds.  thus there is an effective performance degradation of
 more than 50 percent which did not really surprise me because i knew
 that ds compression must cost something.
 
 specifically, for short sequential reads up to 512 bytes, ds actually
 *improves* transfer rates by about 10% (because cpu being faster than
 i/o, more cpu cycles needed for ds is more than compensated by savings
 in i/o cycles).  however, for all other cases, particularly large
 random writes, the transfers take up to three times as long.
 
 while the performance depends on the type of access (i.e random or
 sequential, small or large transfer units), on the average (based on
 winbench's assumptions), the disk slows down to half its speed.
 
 the tests alone, done in 'real mode' (see winbench) and with smartdrv
 on, do not say much except that it helps to put into those subjective
 statements like 'there is no noticable difference in performance' or
 even that 'it will speed up disk access when you have a fast cpu and
 slow disk i/o'.
 
 this explained why some applications ran markedly slower, but not why
 'chkdsk' and 'defrag' (the latter especially) too so long.
 
 
 double space and windows
 ========================
 
 dblspace will not run at all from within windows, not even if you
 wanted to only to get information, not modify anything, or for that
 matter even check on its usage -- try "fasthelp dblspace" in a dos box
 within windows and you will see what i mean from the error message you
 get.  how narrow minded can a programer get, i wonder.
 
 yes, this information can be obtained through the mstools.dd add-on to
 file manager, but this 'mstools' dll does not understand a compressed
 floppy!  (use the dos 6 supplement utility to create a compressed
 floppy if you dont know how to.)
 
 
 dos 6 defragmenter is incompatible with ti apm
 ==============================================
 
 defragmentation seemed to take too much time.  even so, i waited
 patiently till it finished and then ran it again to just to confirm.
 this confirmation 'dblspace /def' command for the 120m drive should take
 no more than 30 seconds (much faster on other defragmenters i have used)
 but it took 12 minutes.
 
 i discovered that if i moved the mouse, defragmentation checking ran
 faster (the % figure ticked more rapidly).  it dawned on me that this
 had to do with ti's battery saver advanced power management (apm)
 module which slows the clock down when it thinks that the cpu is idle,
 and it obviously thought ds defragmentation was an idle process!  after
 disabling the ti's power saver, this operation took only 20 seconds.
 
 
 microsft programmers think ti4000 and gateway nomad users are idiots
 ====================================================================
 
 in the readme.txt file, you can find the the following
 
 	running microsoft backup with ti4000 and gateway nomad computers
 	----------------------------------------------------------------
 	to avoid a conflict between the turbo feature and microsoft backup
 	for windows or ms-dos, add a /l0 switch to the device command in
 	your config.sys that loads the battery.pro file. or, before you
 	run microsoft backup, type setpower /l0 at the command prompt.
 
 if you checked ti's manual on the /l0 option, you will realise that it
 means "disable all power saving features of your notebook".  why would
 anyone want to run a driver disabled!  as i have found out, not only
 does ti's power management interfere with microsoft backup as the
 readme.txt claims, but 'chkdsk' and 'dblspace' (and who knows what
 else) are crippled by the ti's power saver.
 
 it is obvious that there is not such thing as apm specifications.  if
 there indeed is such a thing, then either microsoft programmers or ti
 programmers dont know how to read these specifications.  you dont have
 to guess as to who are the idiots.
 
 by the way, if you run the advance power management utility, power.exe
 in dos6, when you check the status, it says:
 
 	power management status
 	-----------------------
 	setting =  adv: max
 	cpu: idle 60% of time.
 
 this figure of 60% seems to be the steady state value on my notebook
 when i am running nothing (windows with only program manager in
 iconised form).  does that mean that windows takes up 40% of my cpu all
 for itself, and that i have at best only 60% left for useful work?  is
 such an overhead justified  (whether or not windows is an operating
 system or just another user interface)?  (in dos alone, it reports 99%
 idle time.)  looks like windows is a good example of busy waiting type
 of package that i like my students to study as the classical 'negative'
 example of our times!
 
 
 microsoft programmers do not know batch programming
 ===================================================
 
 i like to structure my startup script and thus have the equivalent of
 addpath statements like this:
 
 	set path=c:\dos
 	...
 	set path=c:\etc\bin;%path%;c:\bin
 	...
 	set path=c:\etc\windows;%path%;c:\windows
 	...
 	set path=%path%;c:\bcc\bin
 	...
 	set path=%path%;%mouse%
 
 even though the new dos was installed in the same directory as the old
 one (i.e. c:\dos), dos 6 installation program modifes each and every
 path statement, and prepends c:\dos to its value.  as a result, my
 resultant path has so many dos's.
 
 if the installation program wanted to remove the old dos path, and add
 the new dos path, clearly it has to only scan for the path statement
 containg the old dos directory and replace it by the new dos path.
 (even this should only be done if the new dos is installed in a
 directory different from the old one being 'upgraded'.)
 
 instead, the microsoft programmer (if you can call this person one)
 decided to meddle every path statement i had in the autoexec and
 prepend dos to the value.  i wonder if microsoft is so desparate that it
 would not fire programmers who are incapable of the thought process.
 
 i started a thread on this when dos 4 came up, and the microsoft
 representative in singapore called me about this poster.  in fact he
 specifically said his us counterparts saw the poster and relayed the
 information to him as he did not have access to internet.
 
 now that has not changed one bit.  in fact, if you have a path statement
 with %path% already in it, is it not obvious that the this statement
 should not be touched for any reason?
 
 as another example of the inability of microsoft programmers to
 understand batch programming -- i had the mouse driver invoked as:
 
 	set mouse=c:\etc\mouse
 	set path=%path%;%mouse%
 	loadhigh %mouse%\mouse.com
 
 guess what memmaker did?  it replaced the last statement with
 
 	lh ... c:\etc\mouse\mouse.com
 
 why is it so difficult just to replace loadhigh with lh and its
 parameters, without touching the rest of the line, i do not understand.
 
 
 dos 6 software quality
 ======================
 
 dos 6 is the only operating system i know, in which, under normal usage,
 you end up creating a file that you cannot get rid of using of the
 commands that come with it.
 
 i am deliberately being cryptic about this:  i challenge microsoft to
 use all its programmers to catch this bug and publish it.  if they dont
 within a week, i will post how you can create this "ghost" file.
 
 surely if i can pick this bug without even looking for it after using a
 particular command only twice, i am sure two dozen microsoft (idiot)
 programmers randomly banging on their keyboards over a week could find
 it -- that is what i was told how microsoft "tests the quality" of
 their products.
 
 i think it is funny that microsoft has found ways to "test quality"
 when it is accepted in the industry that quality cannot be tested, but
 can only be built into the product.  no wonder they cannot provide any
 form of guarantees on their products, not even a decent list of bugs
 that will prevent scores of user from destroying their disks beyond
 repair!
 
 also, if you run 'dblspace /def' often enough, repeatedly when the disk
 is fully defragmented, you may get errors, that was created by the
 defragmenters.  i got my io.sys file size error and it got truncated
 when i did the chkdsk.  this happend only after five successive
 defragmentation efforst after the first one supposedly did its job and
 with no new file creation since.
 
 microsft, dont you dare reply to this poster on the network until you
 admit that your ds has bugs, and are willing to let us know what we
 should watch out for if we have already used ds.
 
 jaya
 
 --
 dr. jayasooriah  cse, cs&e, unsw | sign in a paris hotel:                    
 p.o. box 1, kensington, nsw 2033 |                                           
 tel/fax: +61 2 697-5683/313-7987 |    "a sports jacket may be worn to dinner,
 internet: jayas@vast.unsw.edu.au |                         but not trousers."
 dr. jayasooriah  cse, cs&e, unsw | sign in a norwegian cocktail lounge:      
 p.o. box 1, kensington, nsw 2033 |                      "ladies are requested
 tel/fax: +61 2 697-5683/313-7987 |                       not to have children
 internet: jayas@vast.unsw.edu.au |                               in the bar."
 